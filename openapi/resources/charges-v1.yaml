openapi: 3.0.1
servers:
  - url: https://api.malga.io
    description: Production
info:
  version: '0.5'
  title: Charges
tags:
  - name: Charges
    description: |

      To implement a charge, you must create a charge object. You can retrieve details of individual transactions, or list all the charges made at a given merchant. Charges are identified by a 'unique' id.

      **Basic data of an charge object**

      <SchemaDefinition schemaRef="#/components/schemas/Charge" exampleRef="#/components/examples/ChargeCard" />
paths:
  /v1/charges:
    post:
      tags:
        - Charges
      summary: Create new charge
      operationId: createCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeRequest'
            examples:
              card:
                summary: Credit card example
                value:
                  $ref: '#/components/examples/ChargeCardRequest/value'
              pix:
                summary: PIX example
                value:
                  $ref: '#/components/examples/ChargePixRequest/value'
              boleto:
                summary: Boleto example
                value:
                  $ref: '#/components/examples/ChargeBoletoRequest/value'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeResponse'
              examples:
                card:
                  summary: Credit card charge example
                  value:
                    $ref: '#/components/examples/ChargeCardResponse'
                pix:
                  summary: PIX charge example
                  value:
                    $ref: '#/components/examples/ChargePixResponse/value'
                boleto:
                  summary: Boleto charge example
                  value:
                    $ref: '#/components/examples/ChargeBoletoResponse/value'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Charges
      summary: List charges
      operationId: getCharges
      parameters:
        - in: query
          name: page
          schema:
            type: string
          required: false
          description: page number
        - in: query
          name: limit
          schema:
            type: string
          required: false
          description: total itens per page
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeList'
              example:
                $ref: '#/components/examples/ChargeList/value'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/charges/{id}:
    get:
      tags:
        - Charges
      summary: Get charge details
      operationId: getChargeByid
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Charge ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeResponse'
              example:
                $ref: '#/components/examples/ChargeCardResponse/value'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Charges
      summary: Change the status of a charge in the sandbox environment
      operationId: updateChargeStatus
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: id of the charge you want to change in the sandbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChargeStatusRequest'
            example:
              status: charged_back
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeResponse'
              example:
                $ref: '#/components/examples/ChargeCardResponse/value'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/charges/{id}/capture:
    post:
      tags:
        - Charges
      summary: Capture pre-authorized charge
      operationId: captureCharge
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: pre-authorized ChargeResponse ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureRequest'
            example:
              amount: 150
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeResponse'
              example:
                $ref: '#/components/examples/ChargeCardResponse/value'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/charges/{id}/void:
    post:
      tags:
        - Charges
      summary: Refund authorized charge
      operationId: voidCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidRequest'
            example:
              amount: 150
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Charge ID
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeResponse'
              example:
                $ref: '#/components/examples/ChargeCardResponse/value'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
security:
  - X-Client-ID: []
    X-Api-Key: []
components:
  securitySchemes:
    X-Client-ID:
      type: apiKey
      in: header
      name: X-Client-Id
    X-Api-Key:
      type: apiKey
      in: header
      name: X-Api-Key
  schemas:
    PaymentMethodCard:
      type: object
      properties:
        paymentType:
          type: string
          enum:
            - credit
            - debit
          description: Credit/Debit card charge method
        installments:
          type: integer
          description: Installments quantity for credit payments
      required:
        - paymentType
    PaymentMethodPix:
      properties:
        paymentType:
          type: string
          enum:
            - pix
          description: Pix charge, the source must be a valid customer
        expiresIn:
          type: integer
          description: Time in seconds that defines the validity of the charge
      required:
        - paymentType
        - expiresIn
    TransactionRequest:
      properties:
        id:
          type: string
          description: unique identification of request on the provider
        providerId:
          type: string
          description: provider identification related to your merchant id
        providerType:
          type: string
          description: provider code, see table of supported providers
        idempotencyKey:
          type: string
          description: unique identification automatically created by Malga for each request, used to assure idempotency and avoid duplicity, could be used to get transactions in the provider's API or dashboard.
        authorizationNsu:
          type: string
          description: authorization number retunred by provider
          deprecated: true
        transactionId:
          type: string
          description: unique identification of transaction on provider, could be used to get transaction in the provider's API.
        requestType:
          type: string
          enum:
            - pending
            - authorization
            - pre_authorization
            - void
            - capture
            - probe
            - charge_back
            - zero_dollar
            - anti_fraud
          description: type of request performed on provider
        requestStatus:
          type: string
          enum:
            - running
            - failed
            - success
            - timeout
            - internal_error
            - processing
          description: status of request processing
        amount:
          type: integer
          description: transaction request amount sent to provider, for partial capture/refund the amount could be different from original transaction amount
        responseTs:
          type: string
          description: total spent time in request processing
        providerError:
          type: object
          description: transaction requet error details
          properties:
            message:
              type: string
              description: error message mapped by Malga that describes declined reason
            declinedCode:
              type: string
              description: error code mapped by plyg based in the declined code returned by provider
            retryable:
              type: boolean
              description: declined code can be or not retried
            networkDeniedReason:
              type: string
              description: declined code returned as is from the provider, check in the provider's documentation
            networkDeniedMessage:
              type: string
              description: declined message returned as is from the provider
        providerAuthorization:
          type: object
          description: additional data returned by provider
          properties:
            networkAuthorizationCode:
              type: string
              description: authorization code as returned by provider
            networkResponseCode:
              type: string
              description: response code as returned by provider
        createdAt:
          type: string
          description: Created date of request
        updatedAt:
          type: string
          description: Updated date of request
    ChargeRequest:
      properties:
        merchantId:
          type: string
          description: merchant identification to be used in transaction and define the routing rule.
        amount:
          type: integer
          description: transaction amount in cents, example 100 to charge R$ 1.00
        currency:
          type: string
          description: currency code to be used in charge, ISO 4217 format (see table of types).
          default: BRL
        statementDescriptor:
          type: string
          description: description to be displayed on the buyer's bank statement
        capture:
          type: boolean
          description: whether the transaction should be captured automatically
        orderId:
          type: string
          description: Unique identification of order in your side to help future conciliation
        description:
          type: string
          description: Short description to help future conciliation
        customerId:
          type: string
          description: Customer identification to help future conciliation
        paymentMethod:
          description: Payment method to be used
          anyOf:
            - $ref: '#/components/schemas/PaymentMethodCard'
            - $ref: '#/components/schemas/PaymentMethodPix'
            - $ref: '#/components/schemas/PaymentMethodBoleto'
        paymentSource:
          anyOf:
            - $ref: '#/components/schemas/SourceTypeCard'
            - $ref: '#/components/schemas/SourceTypeCardOneShot'
            - $ref: '#/components/schemas/SourceTypeToken'
            - $ref: '#/components/schemas/SourceTypeCustomer'
            - $ref: '#/components/schemas/SourceTypeCustomerOneShot'
        fraudAnalysis:
          description: Additional parameters for fraud analysis, required by provider's anti-fraud
          allOf:
            - $ref: '#/components/schemas/FraudAnalysisRequest'
      required:
        - amount
        - merchantId
        - paymentMethod
        - paymentSource
    FraudAnalysisRequest:
      properties:
        customer:
          description: customer (payeer) data
          type: object
          properties:
            name:
              type: string
              description: customer name
            email:
              type: string
              description: customer email
            phone:
              type: string
              description: customer phone number
            identityType:
              type: string
              description: document type, see table of types
            identity:
              type: string
              description: document number
            registrationDate:
              type: string
              description: customer registration date
            deliveryAddress:
              description: Delivery customer address
              allOf:
                - $ref: '#/components/schemas/FraudAnalysisAddress'
            billingAddress:
              description: Billing customer address
              allOf:
                - $ref: '#/components/schemas/FraudAnalysisAddress'
            browser:
              description: information about customer browser
              allOf:
                - $ref: '#/components/schemas/FraudAnalysisCustomerBrowser'
        cart:
          description: Cart of products details
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: product name
                  quantity:
                    type: integer
                    description: itens of product purchased
                  sku:
                    type: string
                    description: unique product identification on store
                  unitPrice:
                    type: integer
                    description: unit price of product in cents
                  risk:
                    type: string
                    enum:
                      - high
                      - low
                    description: product risk of fraud
                  description:
                    type: string
                    description: product description
                  categoryId:
                    type: string
                    description: category which product belongs to
        device:
          description: Customer device details
          type: object
          properties:
            os:
              type: object
              properties:
                type:
                  type: string
                  description: Operational system type
                version:
                  type: string
                  description: Operational system version
            model:
              type: string
              description: Device model
            ramCapacity:
              type: integer
              description: Device ram capacity
            diskCapacity:
              type: integer
              description: Device disk capacity
            freeDiskSpace:
              type: integer
              description: Device disk space still free
            resolution:
              type: integer
              description: Device resolution
            vendors:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Vendor attribute name
                  value:
                    type: string
                    description: Vendor attribute value
            vendorAttributes:
              description: Device attributes by vendor
              type: object
              properties:
                flash:
                  type: boolean
                  description: Device has flash
                phoneCalls:
                  type: boolean
                  description: Device can make phone calls
                sendSms:
                  type: boolean
                  description: Device can send sms
                videoCamera:
                  type: boolean
                  description: Device has video camera
                cpuCount:
                  type: integer
                  description: Device cpu count
                simulator:
                  type: boolean
                  description: Device has simulator
                language:
                  type: string
                  description: Device language
                idiom:
                  type: string
                  description: Device idiom
                platform:
                  type: string
                  description: System platform
                name:
                  type: string
                  description: Device name
                family:
                  type: string
                  description: Device family
                retinaDisplay:
                  type: boolean
                  description: Device has retina display
                camera:
                  type: boolean
                  description: Device has camera
                model:
                  type: string
                  description: Device model
                frontCamera:
                  type: boolean
                  description: Device has front camera
    FraudAnalysisAddress:
      type: object
      properties:
        country:
          type: string
          description: formated in ISO 3166-1 alpha-2
        state:
          type: string
          description: address state
        city:
          type: string
          description: address city
        district:
          type: string
          description: address district or neighboor
        zipCode:
          type: string
          description: zip code
        street:
          type: string
          description: street address
        number:
          type: string
          description: street number address
        complement:
          type: string
          description: apartament number or address complement
    FraudAnalysisMetadata:
      type: object
      properties:
        customer:
          description: customer (payeer) data
          type: object
          properties:
            name:
              type: string
              description: customer name
            email:
              type: string
              description: customer email
            phone:
              type: string
              description: customer phone number
            identityType:
              type: string
              description: document type, see table of types
            identity:
              type: string
              description: document number
            registrationDate:
              type: string
              description: customer registration date
            deliveryAddress:
              description: Endereço de entrega
              allOf:
                - $ref: '#/components/schemas/FraudAnalysisAddress'
            billingAddress:
              description: Endereço de cobrança
              allOf:
                - $ref: '#/components/schemas/FraudAnalysisAddress'
        cart:
          description: Cart of products details
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: product name
                  quantity:
                    type: integer
                    description: itens of product purchased
                  sku:
                    type: string
                    description: unique product identification on store
                  unitPrice:
                    type: integer
                    description: unit price of product in cents
                  risk:
                    type: string
                    enum:
                      - high
                      - low
                    description: product risk of fraud
                  description:
                    type: string
                    description: product description
                  categoryId:
                    type: string
                    description: category which product belongs to
    FraudAnalysisCustomerBrowser:
      type: object
      properties:
        browserFingerprint:
          type: string
          description: fingerprint id generated by browser
        cookiesAccepted:
          type: boolean
          description: indicates if cookies has been accepeted
        email:
          type: string
          description: logged email address
        hostName:
          type: string
          description: user's computer hostname
        ipAddress:
          type: string
          description: user's ip address
        type:
          type: string
          description: browser's user-agent
    VoidRequest:
      properties:
        amount:
          type: integer
          description: the value to be refunded in cents cannot be greater than the transaction value, example 100 to charge R$ 1.00
        delayToCompose:
          type: integer
          description: number of days to compose the refunded value. It is only used in NuPay integrations.
    UpdateChargeStatusRequest:
      properties:
        status:
          type: string
          description: transaction status
          enum:
            - pending
            - pre_authorized
            - authorized
            - failed
            - canceled
            - voided
            - charged_back
            - created
            - processed
            - capture_pending
            - refund_pending
    CaptureRequest:
      properties:
        amount:
          type: integer
          description: the value to be captured in cents cannot be greater than the transaction value, example 100 to charge R$ 1.00
    SourceTypeCard:
      type: object
      description: identificação do merchant id a ser utilizado
      properties:
        sourceType:
          type: string
          description: tipo da origem da cobrança, usar `card` para cobrança em cartão tokenizado
          example: card
        cardId:
          type: string
          description: Identificador do cartão quando source tipo card (opcional)
      required:
        - sourceType
        - cardId
    SourceTypeCardOneShot:
      type: object
      description: identificação do merchant id a ser utilizado
      properties:
        sourceType:
          type: string
          description: tipo da origem da cobrança, usar `card` para cobrança em cartão tokenizado
          example: card
        card:
          type: object
          properties:
            cardHolderName:
              type: string
              description: Nome do portador do cartão
            cardNumber:
              type: string
              description: Número do cartão (Sem espaços)
            cardCvv:
              type: string
              description: Código de verificação
            cardExpirationDate:
              type: string
              description: Mês e ano de validade no formato MM/YYYY
      required:
        - sourceType
        - card
    SourceTypeToken:
      type: object
      properties:
        sourceType:
          type: string
          description: tipo da origem da cobrança, usar `token` para cobrança no token gerado
          example: token
        tokenId:
          type: string
          description: Identificador do token quando source tipo token (opcional)
      required:
        - sourceType
        - tokenId
    Address:
      type: object
      properties:
        country:
          type: string
          description: Padrão ISO 3166-1 alpha-2
        state:
          type: string
          description: Estado
        city:
          type: string
          description: Cidade
        district:
          type: string
          description: Bairro
        zipCode:
          type: string
          description: Codigo postal CEP
        street:
          type: string
          description: Nome da rua/avenida/travessa
        streetNumber:
          type: string
          description: Numero da rua
        complement:
          type: string
          description: Complemento caso exista
    Document:
      type: object
      properties:
        type:
          type: string
          description: tipo de documento, consultar tabela de tipos suportados
        number:
          type: string
          description: numero do documento formato conforme tipo selecionado
        country:
          type: string
          description: pais de emissão do documento, Padrão ISO 3166-1 alpha-2, consultar tabela de tipos suportados
          default: BR
    SourceTypeCustomer:
      type: object
      properties:
        sourceType:
          type: string
          description: tipo da origem da cobrança, usar `customer` para cobrança no cartão default do comprador
          example: customer
        customerId:
          type: string
          description: Identificador do cliente quando source tipo customer, debitando o cartão default do comprador
      required:
        - sourceType
        - customerId
    SourceTypeCustomerOneShot:
      type: object
      properties:
        sourceType:
          type: string
          description: tipo da origem da cobrança, usar `customer` para cobrança no cartão default do comprador
          example: customer
        customer:
          type: object
          properties:
            name:
              type: string
              description: nome do usuario
            email:
              type: string
              description: email do usuario
            phoneNumber:
              type: string
              description: telefone de contato do usuario
            document:
              allOf:
                - $ref: '#/components/schemas/Document'
            address:
              allOf:
                - $ref: '#/components/schemas/Address'
          required:
            - name
            - phoneNumber
            - email
            - document
      required:
        - sourceType
        - customer
    PaymentMethodBoleto:
      properties:
        paymentType:
          type: string
          enum:
            - boleto
          description: Boleto charge, the source must be a valid customer.
        expiresDate:
          type: string
          description: Boleto due date, ISO-Date, ex 2017-01-31
        instructions:
          type: string
          description: Boleto instructions field. Maximum 255 characters. Use \n for line break
        interest:
          type: object
          description: Optional informations of the fees for delay payment
          properties:
            days:
              type: integer
              description: Days after the expiration of the boleto when interest must be charged
            amount:
              type: integer
              description: Amount in cents of the interest rate that will be charged peer day
            percentage:
              type: number
              description: Amount in percentage of the interest rate that will be charged peer month
        fine:
          type: object
          description: Optional information of the fine condition for delay payment
          properties:
            days:
              type: integer
              description: Days after the boleto expiration when the fine must be charged
            amount:
              type: integer
              description: Fine amount in cents
            percentage:
              type: number
              description: Fine amount in percentage
      required:
        - paymentType
    PaymentMethodPixResponse:
      properties:
        paymentType:
          type: string
          enum:
            - pix
          description: método da cobrança via PIX, o source deve ser um customer válido.
        expiresIn:
          type: integer
          description: tempo em segundos que define a validade da cobrança.
        qrCodeData:
          type: string
          description: código copia e cola para o QR code dinâmico gerado, pronto para ser pago.
        qrCodeImageUrl:
          type: string
          description: link para download da imagem do QR code dinâmico gerado, pronto para ser scaneado e pago.
      required:
        - paymentType
        - expiresIn
        - qrCodeData
        - qrCodeImageUrl
    PaymentMethodBoletoResponse:
      properties:
        paymentType:
          type: string
          enum:
            - boleto
          description: método da cobrança via Boleto, o source deve ser um customer válido
        expiresDate:
          type: string
          description: data de vencimento do boleto em ISO-Date, ex 2017-01-31
        barcodeData:
          type: string
          description: código copia e cola do boleto registrado gerado, pronto para pagamento;
        barcodeImageUrl:
          type: string
          description: link para download do do boleto registrado gerado, pronto para pagamento;
      required:
        - paymentType
        - expiresDate
        - barcodeData
        - barcodeImageUrl
    ErrorResponse:
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/ErrorItem'
    ErrorItem:
      properties:
        type:
          type: string
          enum:
            - api_error
            - bad_request
            - invalid_request_error
            - card_declined
            - conflict
        code:
          type: string
          description: Código de retorno da erro
        declinedCode:
          type: string
          description: Código de retorno da transação em caso de falha na autorização
        message:
          type: string
          description: Descrição breve do erro
        details:
          type: array
          description: Lista contendo objetos que detalham o erro de validação
      required:
        - type
    ChargeResponse:
      properties:
        id:
          type: string
          description: Charge ID
        clientId:
          type: string
          description: client identification on Malga
        merchantId:
          type: string
          description: merchant identification used in charge
        customerId:
          type: string
          description: customer identification
        description:
          type: string
          description: short description
        amount:
          type: integer
          description: transaction amount in cents, example 100 to charge R$ 1.00
        originalAmount:
          type: integer
          description: transaction orignal amount in cents, example 100 to charge R$ 1.00
        currency:
          type: string
          description: currency code to be used in charge, ISO 4217 format (see table of types).
          default: BRL
        statementDescriptor:
          type: string
          description: description to be displayed on the buyer's bank statement
        capture:
          type: boolean
          description: whether the transaction should be captured automatically
        status:
          type: string
          description: charge status on Malga
          enum:
            - pending
            - pre_authorized
            - authorized
            - failed
            - canceled
            - voided
            - refund_pending
            - charged_back
        orderId:
          type: string
          description: Unique identification of order in your side to help future conciliation
        paymentMethod:
          anyOf:
            - $ref: '#/components/schemas/PaymentMethodCard'
            - $ref: '#/components/schemas/PaymentMethodPixResponse'
            - $ref: '#/components/schemas/PaymentMethodBoletoResponse'
        paymentSource:
          anyOf:
            - $ref: '#/components/schemas/SourceTypeCard'
            - $ref: '#/components/schemas/SourceTypeCardOneShot'
            - $ref: '#/components/schemas/SourceTypeToken'
            - $ref: '#/components/schemas/SourceTypeCustomer'
            - $ref: '#/components/schemas/SourceTypeCustomerOneShot'
        createdAt:
          type: string
          description: Created date
        updatedAt:
          type: string
          description: Updated date
        fraudAnalysisMetadata:
          description: Additional parameters for fraud analysis
          allOf:
            - $ref: '#/components/schemas/FraudAnalysisMetadata'
        transactionRequests:
          type: array
          items:
            $ref: '#/components/schemas/TransactionRequest'
    ChargeList:
      properties:
        meta:
          type: object
          $ref: '#/components/schemas/MetaPagination'
        items:
          type: array
          $ref: '#/components/schemas/ChargeResponse'
    MetaPagination:
      properties:
        itemCount:
          type: integer
          description: quantidade de itens na página
        totalItems:
          type: integer
          description: quantidade total de itens na consulta
        itemsPerPage:
          type: integer
          description: quantidade de itens por página
        totalPages:
          type: integer
          description: quantidade total de páginas
        currentPage:
          type: integer
          description: página atual
  examples:
    ErrorResponse:
      value:
        error:
          type: card_declined
          declinedCode: invalid_number
          message: invalid card number
    ChargeCardRequest:
      value:
        merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: false
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: credit
          installments: 1
        paymentSource:
          sourceType: card
          cardId: 148d5db0-f1c3-439f-902d-f1f268086e1d
    ChargePixRequest:
      value:
        merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: true
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: pix
          expiresIn: 3600
        paymentSource:
          sourceType: customer
          customer:
            name: Customer test
            email: jose2@gmail.com
            document:
              number: '97055503019'
              type: cpf
            phoneNumber: 21 98889999099
    ChargeBoletoRequest:
      value:
        merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: true
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: boleto
          expiresDate: '2022-12-31'
          instructions: Instruções para pagamento do boleto
          interest:
            days: 1
            amount: 100
            percentage: 0.2
          fine:
            days: 2
            amount: 200
            percentage: 0
        paymentSource:
          sourceType: customer
          customer:
            name: Customer test
            email: jose2@gmail.com
            document:
              number: '97055503019'
              type: cpf
            phoneNumber: 21 98889999099
    ChargeResponseSplitRequest:
      summary: Card and Split billing example
      value:
        merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: false
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: credit
          installments: 1
        paymentSource:
          sourceType: card
          card:
            cardNumber: '5261424250184574'
            cardCvv: '321'
            cardExpirationDate: 06/2028
            cardHolderName: JOAO DA SILVA
        splitRules:
          - sellerId: 32c68557-902c-408b-b464-cf487c7cda97
            percentage: 80
            liable: true
            processingFee: true
    ChargeCardResponse:
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        amount: 150
        currency: BRL
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: false
        status: pre_authorized
        paymentMethod:
          paymentType: credit
          installments: 1
        paymentSource:
          sourceType: card
          card:
            cardNumber: '5261424250184574'
            cardCvv: '321'
            cardExpirationDate: 06/2028
            cardHolderName: JOAO DA SILVA
        transactionRequests:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            idempotencyKey: fafe857b176e45d6b12e32fcaf228996
            providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
            providerType: STRIPE
            transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
            amount: 1500
            authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
            requestStatus: success
            requestType: authorization
            responseTs: 2633ms
            createdAt: '2021-08-12T16:08:39.536Z'
            updatedAt: '2021-08-12T16:08:42.212Z'
            providerAuthorization:
              networkAuthorizationCode: '00'
              networkResponseCode: ''
    ChargePixResponse:
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: true
        status: pending
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: pix
          expiresIn: 3600
          qrCodeData: 00020101021126510014BR.GOV.BCB.PIX0129K89VdiUgWN1B3p0IHrgHkNHg9tX5F52040000530398654040.155802BR5913Customer test600062070503***630431C0
          qrCodeImageUrl: https://....
        paymentSource:
          sourceType: customer
          customerId: 1cdcf0c9-eb04-4e43-b9b2-b7a4acdead1f
        transactionRequests:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            idempotencyKey: fafe857b176e45d6b12e32fcaf228996
            providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
            providerType: STRIPE
            transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
            amount: 1500
            authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
            requestStatus: success
            requestType: authorization
            responseTs: 2633ms
            createdAt: '2021-08-12T16:08:39.536Z'
            updatedAt: '2021-08-12T16:08:42.212Z'
            providerAuthorization:
              networkAuthorizationCode: '00'
              networkResponseCode: ''
    ChargeBoletoResponse:
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: true
        status: pending
        paymentMethod:
          paymentType: boleto
          expiresDate: '2021-12-31'
          barcodeData: '412343241324321431241341'
          barcodeImageUrl: https://....
        paymentSource:
          sourceType: customer
          customerId: 1cdcf0c9-eb04-4e43-b9b2-b7a4acdead1f
        transactionRequests:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            idempotencyKey: fafe857b176e45d6b12e32fcaf228996
            providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
            providerType: STRIPE
            transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
            amount: 1500
            authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
            requestStatus: success
            requestType: authorization
            responseTs: 2633ms
            createdAt: '2021-08-12T16:08:39.536Z'
            updatedAt: '2021-08-12T16:08:42.212Z'
            providerAuthorization:
              networkAuthorizationCode: '00'
              networkResponseCode: ''
    ChargeList:
      value:
        meta:
          itemCount: 10
          totalItems: 20
          itemsPerPage: 10
          totalPages: 5
          currentPage: 2
        items:
          - id: 148d5db0-f1c3-439f-902d-f1f268086e1d
            customerId: 82aba896-9e37-45b6-aa90-d510c9050596
            clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
            createdAt: 2012-06-30 23:59:59 +0000
            amount: 150
            currency: BRL
            statementDescriptor: LOJA JOAO
            description: Descrição longa da cobrança
            capture: false
            orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
            paymentMethod:
              paymentType: credit
              installments: 1
            paymentSource:
              sourceType: card
              cardId: 148d5db0-f1c3-439f-902d-f1f268086e1d
            transactionRequests:
              - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                providerType: STRIPE
                transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                amount: 1500
                authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                requestStatus: success
                requestType: authorization
                responseTs: 2633ms
                createdAt: '2021-08-12T16:08:39.536Z'
                updatedAt: '2021-08-12T16:08:42.212Z'
                providerAuthorization:
                  networkAuthorizationCode: '00'
                  networkResponseCode: ''
    ChargeResponseSplit:
      summary: Exemplo resposta cobrança Cartão e Split
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        amount: 150
        currency: BRL
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: false
        status: pre_authorized
        paymentMethod:
          paymentType: credit
          installments: 1
        paymentSource:
          sourceType: card
          cardId: 148d5db0-f1c3-439f-902d-f1f268086e1d
        transactionRequests:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            idempotencyKey: fafe857b176e45d6b12e32fcaf228996
            providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
            providerType: STRIPE
            transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
            amount: 1500
            authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
            requestStatus: success
            requestType: authorization
            responseTs: 2633ms
            createdAt: '2021-08-12T16:08:39.536Z'
            updatedAt: '2021-08-12T16:08:42.212Z'
            providerAuthorization:
              networkAuthorizationCode: '00'
              networkResponseCode: ''
        splitRules:
          - sellerId: 32c68557-902c-408b-b464-cf487c7cda97
            percentage: 80
            liable: true
            processingFee: true
