openapi: 3.0.1
info:
  version: '0.5'
  title: Malga API Documentation
  description: >
    # Authentication


    Malga’s API services are protected through access keys. You can manage your
    access keys through your dashboard.


    It is important to store your keys privately and safely since they have
    modification privileges in your account. Do not share your keys, do not
    leave them fixed in your code, and do not store them on your version control
    server. We recommend using secret environment variables to make the key
    available to your application.


    Authentication for all API calls is done through HTTP headers, requiring you
    to enter your Malga client identifier and secret access key.


    ## X-Client-ID


    | Security Scheme Type | API Key |

    |-----------------------|-----------|

    | Header parameter name | `X-Client-ID` |


    ## X-Api-Key


    | Security Scheme Type | API Key |

    |-----------------------|-----------|

    | Header parameter name | `X-Api-Key` |


    ## Example authenticated request


    ```bash
      curl --location --request GET 'https://api.malga.io/v1/' \
        --header 'X-Client-Id: <YOUR_CLIENT_ID>' \
        --header 'X-Api-Key: <YOUR_SECRET_KEY>'
    ```
servers:
  - url: https://api.malga.io
    description: Production
tags:
  - name: Webhooks
    description: >

      Malga uses the webhooks service to notify your system about events
      occurring in our platform. Through webhooks you can update your system
      whenever an important event happens, such as updating the status of
      charges to confirm or cancel a certain payment.


      **Basic data of an event object:**


      <SchemaDefinition schemaRef="#/components/schemas/Malga API
      Documentation_Event" exampleRef="#/components/examples/Malga API
      Documentation_Event" />
    x-displayName: Webhooks
  - name: Reports
    description: >

      Through the Reports API, it is possible to export the information of the
      transactions processed through Malga in .csv file, related to the charges,
      the transaction, the payment link and the customer who made the payment
    x-displayName: Reports
  - name: Merchants
    description: >

      Through the merchant’s APIs, it is possible to create and configure
      sub-accounts on Malga. A sub account, or merchant, is a registry of a
      commercial business you have with one of Malga's integrated payment
      providers. Once you have an account created in one of the accepted
      providers, you simply request your access credentials to the partner and
      set up your registration with Malga.


      In the merchant registration, you must inform the mcc category code of
      your registration with the provider, choose one of the provider types
      supported by Malga, and set the provider's priority with your access
      credentials to the provider's API.


      Malga's intelligent transaction routing system is designed to support the
      use of multiple providers per merchant account. We use the priority
      defined in the provider registration to prioritize a given provider over
      another, so you can manage the order of providers that will be used to
      perform the reattempts.


      ### See [Table of Supported Payment
      Providers](#section/Provedores-e-meios-de-pagamentos-suportados) to setup
      credentials


      ### See [Table of MCCs](#section/Table-of-MCCs) to create merchants


      **Basic data of an merchant object**


      <SchemaDefinition schemaRef="#/components/schemas/Malga API
      Documentation_Merchant" exampleRef="#/components/examples/Malga API
      Documentation_Merchant" />
    x-displayName: Merchants
  - name: Sellers
    description: >

      To perform a charge with Split, it is first necessary to create a
      `seller`. The `sellers` are identified from a unique id.


      Through the `sellers` APIs it is possible to create and configure
      receivers that will benefit from a Split. A recipient, or a `seller`, is a
      record of a natural or legal person to whom you are interested in
      automatically transferring amounts for a certain charge.


      <SchemaDefinition schemaRef="#/components/schemas/Malga API
      Documentation_Seller" exampleRef="#/components/examples/Malga API
      Documentation_SellerRequestBusiness" />
    x-displayName: Sellers
  - name: Flows
    description: >

      Through the `flows` API it is possible to register a flow and manage its
      payments.


      <SchemaDefinition schemaRef="#/components/schemas/Malga API
      Documentation_Flow" exampleRef="#/components/examples/Malga API
      Documentation_FlowResponse" />
    x-displayName: Flows
  - name: Table of types
    description: >

      # Providers and payment methods supported


      | Provedor       | Cartão  | Boleto | Pix   | Split | 3DS2 |
      Descrição       |

      | -------------  |---      |---     |---    |---    |---  
      |---------        |

      | `ADYEN`        | YES     | YES    | YES   | NO    | YES  |
      Adyen           |

      | `BB`           | NO      | NO     | YES   | NO    | NO   | Banco do
      Brasil |

      | `BRAINTREE`    | YES     | NO     | NO    | NO    | NO   |
      Braintree       |

      | `BRASPAG`      | YES     | NO     | NO    | YES   | NO   |
      Braspag         |

      | `BS2_BOLETO`   | NO      | YES    | NO    | NO    | NO   | Banco BS2
      Boleto|

      | `BS2`          | NO      | NO     | YES   | NO    | NO   | Banco
      BS2       |

      | `CIELO`        | YES     | NO     | NO    | NO    | NO   |
      Cielo           |

      | `GETNET`       | YES     | YES    | YES   | NO    | NO   |
      Getnet          |

      | `KLAP`         | YES     | NO     | NO    | NO    | NO   |
      Klap            |

      | `MERCADO_PAGO` | YES     | YES    | YES   | NO    | NO   | Mercado
      Pago    |

      | `PAGARME`      | YES     | YES    | YES   | YES   | NO   |
      Pagar.me        |

      | `PAGSEGURO`    | YES     | NO     | YES   | NO    | NO   |
      PagSeguro       |

      | `REDE`         | YES     | NO     | NO    | NO    | NO   |
      Rede            |

      | `STRIPE`       | YES     | YES    | NO    | NO    | NO   |
      Stripe          |

      | `ZOOP`         | YES     | YES    | YES   | YES   | NO   |
      Zoop            |

      | `SANDBOX`      | YES     | YES    | YES   | YES   | YES  | Simulator
      used to authorized payments in sandbox |


      # Antifraud Providers

      | Provider      | Realtime | Async |  Description  |

      | ------------  |---       |---    |---------      |

      | `CLEARSALE`   | YES      | NO    | Clearsale Realtime Decision and
      Behaviour Analytics |


      # Table of declined codes


      | DeclinedCode             | ResponseMessage       | O que fazer (ABECS) |

      | --------------------------|-----------  | --------------- |

      | *card_not_supported*        | The card does not support this type of
      purchase | UTILIZE FUNÇÃO DÉBITO |

      | *expired_card*              | The card expiration date is invalid |
      VERIFIQUE OS DADOS DO CARTÃO |

      | *fraud_confirmed*           | The charge has been declined for confirmed
      fraud |  TRANSAÇÃO NÃO PERMITIDA PARA O CARTÃO - NÃO TENTE NOVAMENTE |

      | *fraud_suspect*             | The charge has been declined for suspect
      it is fraudulent |   CONTATE A CENTRAL DO SEU CARTÃO |

      | *generic*                   | The card has been declined for a unknown
      reason |   CONTATE A CENTRAL DO SEU CARTÃO |

      | *insufficient_funds*        | The card has insufficient funds |  NÃO
      AUTORIZADA |

      | *invalid_amount*            | The charge amount is not valid or exceeded
      maximum allowed  |  VALOR DA TRANSAÇÃO NÃO PERMITIDO - NÃO TENTE NOVAMENTE
      |

      | *invalid_cvv*               | The security code is invalid  | SENHA
      INVÁLIDA |

      | *invalid_data*              | The card has been declined for invalid
      data | VERIFIQUE OS DADOS DO CARTÃO |

      | *invalid_installment*       | The charge has been declined because
      invalid number of installments | PARCELAMENTO INVÁLIDO - NÃO TENTE
      NOVAMENTE |

      | *invalid_merchant*          | The charge has been declined because
      merchant is not valid  | TRANSAÇÃO NÃO PERMITIDA - NÃO TENTE NOVAMENTE |

      | *invalid_merchant*          | The charge has been declined because
      merchant is not valid  | CONTA ORIGEM INVÁLIDA - NÃO TENTE NOVAMENTE |

      | *invalid_number*            | The card number is invalid  | VERIFIQUE OS
      DADOS DO CARTÃO |

      | *invalid_pin*               | The card has been declined because pin is
      invalid | SENHA INVÁLIDA - NÃO TENTE NOVAMENTE |

      | *issuer_not_available*      | The card issuer could not be reached,
      charge not authorized | DADOS DO CARTÃO INVÁLIDO - NÃO TENTE NOVAMENTE |

      | *lost_card*                 | The card has been declined because the
      card is reported lost  | TRANSAÇÃO NÃO PERMITIDA - NÃO TENTE NOVAMENTE |

      | *not_permitted*             | The charge is not permited to the card  |
      TRANSAÇÃO NÃO PERMITIDA PARA O CARTÃO- NÃO TENTE NOVAMENTE |

      | *pickup_card*               | The card cannot be used to make this
      charges  | CONTATE A CENTRAL DO SEU CARTÃO - NÃO TENTE NOVAMENTE |

      | *pin_try_exceeded*          | The card has been declined because
      exceeded maximum pin tries | EXCEDIDAS TENTATIVAS DE SENHA.CONTATE A
      CENTRAL DO SEU CARTÃO |

      | *restricted_card*           | The card cannot be used to make this
      charge | DESBLOQUEIE O CARTÃO |

      | *security_violation*        | The card has been declined for a unknown
      reason | VERIFIQUE OS DADOS DO CARTÃO |

      | *service_not_allowed*       | The card has been declined because do not
      support international charge  | CARTÃO NÃO PERMITE TRANSAÇÃO INTERNACIONAL
      |

      | *stolen_card*               | The card has been declined because the
      card is reported stolen  | TRANSAÇÃO NÃO PERMITIDA - NÃO TENTE NOVAMENTE |

      | *transaction_not_allowed*   | The card has been declined for a unknown
      reason | ERRO NO CARTÃO - NÃO TENTE NOVAMENTE |

      | *try_again*                 | The card has been declined for a unknown
      reason | REFAZER A TRANSAÇÃO |


      # Table of MCCs


      |MCC | Descrição |

      |--------|-----------------|

      |*742*  | VETERINARIA |

      |*744*  | Carefree Resorts |

      |*763*  | COOPERATIVA AGRÍCOLA |

      |*780*  | SERVIÇOS DE PAISAGISMO E HORTICULTURA |

      |*1520* |  EMPREITEIROS EM GERAL - COMERCIAL E RESIDENCIAL |

      |*1711* |  PREST. DE SERV. PARA AR COND., ENCANAMENTO E AQUEC. |

      |*1731* |  ELETRICISTAS E SERVIÇOS ELÉTRICOS |

      |*1740* |  PEDREIROS E SERVIÇOS DE INSTALAÇÃO |

      |*1750* |  MARCENEIROS E SERVIÇOS DE CARPINTARIA |

      |*1761* |  METALURGICOS |

      |*1771* |  EMPREITEIO PARA SERVIÇOS ESPECIALIZADO |

      |*1799* |  DEMAIS SVS DE REFORMA E CONSTRUÇÃO NÃO-CLASSIFICADOS |

      |*2741* |  EDITORAS - PUBLICAÇÕES E IMPRESSÕES |

      |*2791* |  TYPESETTING, PLATE MAKING AND RELATED SERVICES |

      |*2842* |  SERVIÇOS DE LIMPEZA E POLIMENTO |

      |*4011* |  TRANSPORTE FERROVIÁRIO DE CARGA |

      |*4111* |  TRANSPORTE LOCAL DE PASSAGEIROS, INCLUINDO BALSAS |

      |*4112* |  TRANSPORTE DE PASSAGEIROS EM TREM (LONGA DISTÂNCIA) |

      |*4119* |  AMBULANCIAS |

      |*4121* |  LIMUSINES E TÁXIS (TAXICABS AND LIMOUSINES) |

      |*4131* |  COMPANHIAS DE ONIBUS |

      |*4214* |  TRANSPORTE DE CARGA RODOVIÁRIO E ARMAZENAMENTO |

      |*4215* |  CORREIOS - AÉREO, TERRESTRE E TRANSITÓRIOS |

      |*4225* |  ARMAZENAM. PROD AGRÍCOLAS,MERCAD REFRIGERADAS,BENS DOMÉSTICO |

      |*4411* |  LINHAS DE CRUZEROS (CRUISE LINES) |

      |*4457* |  ALUGUEL E ARRENDAMENTO DE BARCOS, ESQUIS E IATES |

      |*4468* |  MARINAS, SERVIÇOS E FORNECEDORES |

      |*4511* |  OUTRAS CIAS AÉREAS |

      |*4582* |  AEROPORTOS E SERVIÇOS LIGADOS A AERONAVES |

      |*4722* |  AGÊNCIAS DE VIAGENS (TRAVEL AGENCIES) |

      |*4723* |  AGÊNCIAS DE VIAGEM TUI (TUI TRAVEL AGENCY) |

      |*4784* |  PEDÁGIOS |

      |*4789* |  SERVIÇOS DE TRANSPORTE |

      |*4812* |  TELEFONES E EQUIPAMENTOS DE TELECOMUN. |

      |*4813* |  SERVIÇOS DE TELEC.- CHAM. LOCAIS E LONGA DISTÂNCIA |

      |*4814* |  SERVIÇOS DE TELECOMUNICAÇÃO |

      |*4816* |  REDES DE COMPUTADORES / SERVIÇOS DE INFORMAÇÃO |

      |*4821* |  TELEGRAFO |

      |*4829* |  ORDENS DE PAGAMENTO POR TRANSFERÊNCIA BANCÁRIA |

      |*4899* |  SERVIÇOS DE TV A CABO/PAGA (CABLE/PAY TV SERVICES) |

      |*4900* |  UTILID./ELEC/GAS/AGUÁ/SANI (UT../ELEC/GAS/H2O/SANI) |

      |*5013* |  ATACADISTAS E DISTRIBUIDORES DE ACESSÓRIOS DE VEÍCULOS |

      |*5021* |  MÓVEIS PARA ESCRITÓRIOS (COMMERCIAL FURNITURE) |

      |*5039* |  MATERIAL PARA CONSTRUÇÃO E AFINS (CONST. MAT. - DEF) |

      |*5044* |  A/D DE EQUIPAMENTOS DE FOTOGRAFIA, CÓPIA E MICROFILME |

      |*5045* |  COMPUTADORES, EQUIPAMENTOS E SOFTWARES |

      |*5046* |  A/D DE MÁQUINAS E EQUIPAMENTOS PARA EC |

      |*5047* |  A/D DE EQUIPAMENTO HOSPITALARES, MÉDICOS E OFTÁLMICOS |

      |*5051* |  CENTROS DE SERVIÇOS DE METAIS (METAL SERVICE CENTERS) |

      |*5065* |  LOJA ARTIGOS ELETRÔNICOS |

      |*5072* |  EQUIP./DISTRIB. DE HARDWARE (HARDWARE EQUIP.SUPPLIES) |

      |*5074* |  EQUIP. DE AQUECIMENTO/ENCANAMENTO (PLUMB./HEAT. E.) |

      |*5085* |  A/D DE SUPRIMENTOS INDUSTRIAIS (NÃO CLASSIFICADO EM OUTRO) |

      |*5094* |  JOALHERIA, PEDRAS PRECIOSAS, METAIS |

      |*5099* |  ATACADISTAS E DISTRIBUIDORES DE MERCADORIAS DURÁVEIS |

      |*5111* |  A/D DE ARTIGOS DE PAPELARIA E SUPRIMENTOS PARA ESCRITÓRIO |

      |*5122* |  FARMACEUTICOS/DROGAS (DRUGS/DRUGGISTS SUNDRIES) |

      |*5131* |  A/D DE TECIDOS E PRODUTOS DE ARMARINHO |

      |*5137* |  ATACADISTAS E DISTRIBUIDORES DE ROUPAS |

      |*5139* |  ATACADISTAS E DISTRIBUIDORES DE CALÇADOS |

      |*5169* |  A/D DE PRODUTOS QUIMICOS E SEMELHANTES (N CLASSIF. EM OUTRO) |

      |*5172* |  PRODUTOS DE PETRÓLEO (PETROLEUM/PETROLEUM PRODUCTS) |

      |*5192* |  ATAC. E DISTRIB. DE LIVROS, PERIÓDICOS E JORNAIS |

      |*5193* |  ATACADISTAS E DISTRIBUIDORES DE FLORES, PLANTAS E SEMENTES |

      |*5198* |  PINTURA, POLIMENTO E SUPRIM. (PAN.,VARN. & SUPPLIES) |

      |*5199* |  A/D DE MERCADORIAS NÃO DURÁVEIS (NÃO CLASSIF. EM OUTRO) |

      |*5200* |  LOJAS DE MATERIAL DE CONSTRUÇÃO (PEQUENO/MÉDIO PORTE) |

      |*5211* |  LOJAS DE MATERIAL DE CONSTRUÇÃO-PRODUTOS BRUTOS (EX: TIJOLO) |

      |*5231* |  LOJAS DE VIDROS, TINTAS E PAPÉIS DE PAREDE |

      |*5251* |  VENDA DE EQUIPAMENTOS, INCLUINDO DE FERRAGEM |

      |*5261* |  JARDINAGEM |

      |*5271* |  CORRETORES DE RESIDÊNCIAS MÓVEIS |

      |*5300* |  VENDA POR ATACADO (WHOLESALE CLUBS) |

      |*5309* |  DUTY FREE STORES |

      |*5310* |  LOJAS DE DESCONTO |

      |*5311* |  LOJAS DE DEPARTAMENTOS (DEPARTMENT STORES) |

      |*5331* |  LOJAS DE VARIEDADES |

      |*5399* |  LOJA MERCADORIAS GERAIS |

      |*5411* |  MERCEARIAS/SUPERMERCADOS (GROCERY STORES/SUPERM.) |

      |*5422* |  AÇOGUEIRO (FREEZER/MEAT LOCKERS) |

      |*5441* |  LOJA DE DOCES |

      |*5451* |  LOJA DE PRODUTOS DE LACTICÍNIOS (DAIRY PROD. STORES) |

      |*5462* |  CONFEITARIAS (BAKERIES) |

      |*5499* |  LOJA DE ALIMENTOS VARIADOS (MISC FOOD S. - DEFAULT) |

      |*5511* |  VENDA DE CARROS E CAMINHÕES (NOVOS E USADOS) |

      |*5521* |  VENDA DE CARROS USADOS |

      |*5531* |  Lojas de Automóveis, Lojas de Acessórios Domésticos |

      |*5532* |  LOJA DE PNEUS |

      |*5533* |  LOJA DE PEÇAS E ACESSÓRIOS DE CARROS |

      |*5541* |  ESTAÇÕES DE SERVIÇOS (SERVICE STATIONS) |

      |*5551* |  VENDA DE BARCOS MOTORIZADOS |

      |*5561* |  ARTIGOS PARA ACAMPAMENTO |

      |*5571* |  LOJAS DE MOTOCICLETAS E ACESSÓRIOS |

      |*5592* |  VENDA DE TRAILLERS |

      |*5598* |  CONSECIONÁRIA DE SNOWMOBILE |

      |*5599* |  SERVIÇOS GERIAS PARA CARROS |

      |*5611* |  ARTIGOS MASCULINOS |

      |*5621* |  LOJA DE ROUPAS FEMININAS "PRONTA PARA USAR" |

      |*5631* |  ACESSORIOS FEMININOS E LINGERIES |

      |*5641* |  ARTIGOS PARA CRIANÇAS E BEBÊS |

      |*5651* |  ROUPAS MASCULINAS, FEMININAS E INFANTIS |

      |*5655* |  ROUPA ESPORTIVA |

      |*5661* |  LOJAS DE SAPATOS |

      |*5681* |  LOJA DE PELES |

      |*5691* |  OJA ROUPA UNISSEX |

      |*5697* |  COSTUREIRAS E ALFAIATES |

      |*5698* |  LOJAS DE PERUCA |

      |*5699* |  SERVIÇOS GERIAS PARA VESTIMENTA |

      |*5712* |  LOJA DE MÓVEIS |

      |*5713* |  Loja de Pisos |

      |*5714* |  LOJA DE ESTOFADOS (DRAPERY & UPHOLSTERY STORES) |

      |*5718* |  LAREIRAS E ACESSÓRIOS (FIREPLACES & ACCESSORIES) |

      |*5719* |  LOJA DE MÓVEIS ESPECIALIZADA (HOME FURNISHING SPEC.) |

      |*5722* |  LOJAS DE ELETRODOMÉSTICOS |

      |*5732* |  LOJA DE ELETRÔNICOS |

      |*5733* |  LOJA INSTRUMENTO MUSICAIS |

      |*5734* |  LOJA DE SOFTWARE |

      |*5735* |  LOJAS DE DISCOS |

      |*5811* |  DISTRIBUIÇÃO E PRODUÇÃO DE ALIMENTOS |

      |*5812* |  RESTAURANTES |

      |*5813* |  BARES, PUBS E CASA NOTURNAS |

      |*5814* |  LANCHONETES DE COMIDAS RÁPIDAS (FAST FOOD) |

      |*5815* |  Produtos Digitais - De comunicação social audiovisual,
      incluindo Livros, Filmes e Música |

      |*5816* |  Pordutos Digitais - Jogos |

      |*5817* |  Produtos Digitais - Aplicativos de Software (Exceto Jogos) |

      |*5818* |  Produtos Digitais - Diversas Categorias |

      |*5912* |  FARMÁCIAS (DRUG STORES & PHARMACIES) |

      |*5921* |  CERVEJAS, VINHOS E LICORES (STORE/BEER/WINE/LIQUOR) |

      |*5931* |  LOJAS DE ARTIGOS DE SEGUNDA MÃO / BRECHÓS |

      |*5932* |  LOJA DE ANTIGUIDADES (ANTIQUE SHOPS) |

      |*5933* |  LOJAS DE PENHORES |

      |*5935* |  DEMOLIÇÕES, SUCATAS, DESMANCHES DE AUTOMÓVEIS |

      |*5937* |  L. DE REPRODUÇÃO DE ANTIQUIDADES (ANT.REPROD. STORES) |

      |*5940* |  LOJA DE BICICLETAS - VENDAS E SERVIÇOS |

      |*5941* |  SERVIÇOS GERAIS PARA ESPORTES |

      |*5942* |  LIVRARIAS |

      |*5943* |  PAPELARIAS |

      |*5944* |  JOALHERIA (JEWERLY STORE) |

      |*5945* |  LOJA DE BRINQUEDOS |

      |*5946* |  LOJA DE FOTOGRAFIA |

      |*5947* |  LOJA DE PRESENTES |

      |*5948* |  ARTIGOS DE COURO |

      |*5949* |  ARMARINHOS E LOJAS DE TECIDO |

      |*5950* |  LOJA DE COPOS/CRISTAIS (GLASSWARE/CRYSTAL STORES) |

      |*5960* |  MARK.DIRETO DE SEGUROS (DIR. MARKET. INSURANCE SVC) |

      |*5962* |  SERV. DIRETOS DE VIAGENS (D. MKTG-TRAV. RELATED ARR) |

      |*5963* |  VENDA DIRETA (DIRECT SELL/DOOR-TO-DOOR) |

      |*5964* |  CATALOGO DE COMERCIOS (CATALOG MERCHANT) |

      |*5965* |  CATÁLOGO DE VAREJO (COMB.CATALOG & RETAIL) |

      |*5966* |  MARKETING DIRETO-SAÍDA (OUTB. TELEMARKETING M.) |

      |*5967* |  MARKETING DIRETO - ENTRADA (INB. TELEMARKETING M.) |

      |*5968* |  ASSINATURA COMERCIAL (CONTINUITY/SUBSCRIP. MERCHANT) |

      |*5969* |  OUTROS VENDEDORES DE MARKETING DIRETO |

      |*5970* |  PRODUTOS ARTESANAIS |

      |*5971* |  GALERIA DE ARTE (ART DEALERS & GALLERIES) |

      |*5972* |  LOJA DE MOEDAS E SELOS |

      |*5973* |  LOJA DE BENS RELIGIOSOS |

      |*5975* |  APARELHOS AUDITIVOS - VENDAS E SERVIÇOS |

      |*5976* |  BENS ORTOPÉDICOS - PRÓTESES |

      |*5977* |  LOJA DE COSMÉTICOS |

      |*5978* |  MÁQUINAS DE ESCREVER - VENDA, ALUGUEL E SERVIÇOS |

      |*5983* |  REVENDEDORES DE COMBUSTÍVEIS (FUEL DEALERS) |

      |*5992* |  FLORICULTURA |

      |*5993* |  TABACARIA |

      |*5994* |  BANCA DE JORNAL E PROVEDOR DE NOTÍCIAS |

      |*5995* |  PET SHOP |

      |*5996* |  PISCINAS E BANHEIRAS - SERVIÇOS, SUPRIMENTOS E VENDAS |

      |*5997* |  NAVALHA ELÉTRICA - VENDA E SERVIÇOS |

      |*5998* |  LOJAS DE BARRACAS E TOLDOS |

      |*5999* |  LOJAS ESPECIALIZADAS NÃO LISTADAS ANTERIOMENTE |

      |*6010* |  BANCOS / LOJAS DE POUPANÇA E INST. FINANCEIRA |

      |*6011* |  INSTIUIÇÃO FINANCEIRA - CAIXA ELETRÔNICO |

      |*6012* |  INSTIUIÇÃO FINANCEIRA - AGÊNCIAS E SERVIÇOS |

      |*6050* |  Similar a Dinheiro (Quase Cash) - Instituição Financeira
      Cliente |

      |*6051* |  CASAS DE CÂMBIO |

      |*6211* |  CORRETORES DE IMÓVEIS (SECURITIES BROKERS/DEALERS) |

      |*6300* |  VENDA DE SEGUROS(INSURANCE SALES/UNDERWRITE) |

      |*6513* |  CORRETOR DE IMÓVEIS (ALUGUEL) |

      |*6532* |  PAGTOS DE TRANSAÇÕES DE INST.FINANCEIRAS |

      |*6533* |  PAGTOS DE TRANSAÇÕES COMERCIAIS |

      |*7011* |  HOTEIS (HOTELS/MOTELS/RESORTS) |

      |*7012* |  TEMPO COMPARTILHADO (TIMESHARE) |

      |*7032* |  ACAMPAMENTOS RECREATIVOS E DEPORTIVOS |

      |*7033* |  SERVIÇOS DE ACAMPAMENTOS |

      |*7210* |  LAVANDARIA, LIMPEZA E SERVIÇOS DE VESTUÁRIO |

      |*7211* |  LAVANDERIA - FAMILIAR E COMERCIAL |

      |*7216* |  LAVANDERIA TINTURARIA |

      |*7217* |  LIMPEZA DE TAPETES E ESTOFADOS |

      |*7221* |  ESTÚDIOS DE FOTOGRAFIA |

      |*7230* |  SALAO DE BELEZA / BARBEARIA / DEPILAÇÃO / MANICURE |

      |*7251* |  LOJA/REPARO DE SAPATOS |

      |*7261* |  SERVIÇO FUNERÁRIO |

      |*7273* |  SERVIÇO DE ENCONTROS E ACOMPANHANTE |

      |*7276* |  SERVIÇOS DE PREP. IMPOST. DE RENDA (TAX PREP. SVCS) |

      |*7277* |  S. DE ACONSELHAMENTO DE DÍVIDAS, CASAMENTO E PESSOAL |

      |*7278* |  CLUBES DE COMPRAS |

      |*7296* |  ALUGUEL DE ROUPAS - FANTASIAS, UNIFORMES E ROUPAS SOCIAIS |

      |*7297* |  CENTRO DE SAUNAS E MASSAGENS |

      |*7298* |  CLÍNICAS DE ESTÉTICA FACIAL / CORPORAL |

      |*7299* |  OUTROS SERVIÇOS PESSOAIS |

      |*7311* |  PUBLICIDADES |

      |*7321* |  AGÊNCIAS DE ANÁLISE DE CRÉDITO DE CONSUMIDORES |

      |*7333* |  SERVIÇOS DE IMPRESSÃO E ARTE GRÁFICA |

      |*7338* |  COPIADORAS E FOTOCOPIADORAS |

      |*7339* |  SERVIÇO DE SECRETARIADO E ESTENOGRAFIA |

      |*7342* |  DEDETIZAÇÃO E DESINFECÇÃO |

      |*7343* |  SERVIÇO DE EXTERMINIO E DESINFETAÇÃO |

      |*7349* |  SERVIÇO LIMPEZA E MANUTENÇÃO |

      |*7361* |  AGÊNCIAS DE EMPREGO |

      |*7372* |  SERVIÇOS DE PROGRAMAÇÃO DE COMPUTADORES E PROCESS. DE DADOS |

      |*7375* |  SERVIÇO DE RECUPERAÇÃO DE INFORMAÇÃO |

      |*7379* |  COMPUTADORES: CONCERTOS E REPAROS |

      |*7392* |  CONSULTORIA EMPRESARIAL E SERVIÇOS DE RELAÇÕES PÚBLICAS |

      |*7393* |  AGÊNCIAS DE DETETIVES, PROTECÇÃO E DE SEGURANÇA |

      |*7394* |  ALUGUEL DE EQUIPAMENTO E MOBÍLIA DE ESCRITÓRIOS |

      |*7395* |  LABORATÓRIOS FOTOGRÁFICOS |

      |*7399* |  SERVIÇOS DE NEGÓCIOS |

      |*7511* |  PARADA DE CAMINHÕES (TRUCK STOP) |

      |*7512* |  ALUGUEL DE AUTOMÓVEIS (AUTOMOBILE RENTAL AGENCY) |

      |*7513* |  ALUGUEL DE CAMINHÕES (TRUCK/UTILITY TRAILER RENTALS) |

      |*7519* |  ALUGUEL DE MOTOR HOME (MOTOR HOME/RV RENTALS) |

      |*7523* |  ESTACIONAMENTOS E GARAGENS DE CARRO |

      |*7531* |  FUNILARIAS E PINTURA AUTOMOTIVA |

      |*7534* |  BORRACHARIAS |

      |*7535* |  LOJAS DE PINTURA DE AUTTOMÓVEIS |

      |*7538* |  SERVIÇOS PARA CARROS (NÃO CONCESIONARIA) |

      |*7542* |  LAVA JATO |

      |*7549* |  GUINCHO |

      |*7622* |  CONSERTO DE EQUIP. AUDIO E TV |

      |*7623* |  CONSERTO DE AR CONDICIONADO |

      |*7629* |  CONSERTO DE ELETRONICOS |

      |*7631* |  CONSERTO DE RELÓGIOS E JÓIAS |

      |*7641* |  RESTAURAÇÃO DE MÓVEIS (FURNITURE REPAIR) |

      |*7692* |  SERRALHEIROS E SOLDADORES |

      |*7699* |  LOJA DE CONSERTOS GERAIS E SERVIÇOS RELACIONADOS |

      |*7829* |  PRODUTORES E DISTRIBUIDORES DE FILMES |

      |*7832* |  CINEMAS, PRODUÇÕES CINEMATOGRÁFICAS |

      |*7841* |  LOJAS DE VIDEOS |

      |*7911* |  DANÇA (ESTUDIOS, ESCOLAS E SALÕES) |

      |*7922* |  TEATROS, PRODUC. TEATR. E ESPECTAC. |

      |*7929* |  BANDAS,ORQUESTRAS,ARTISTAS DIVERSOS(N CLASSIFICADO EM OUTRO) |

      |*7932* |  BARES DE SINUCA |

      |*7933* |  BOLICHE |

      |*7941* |  QUADRAS DE ESPORTE / PROPAGANDA ESPORTIVA |

      |*7991* |  ATRAÇÕES TURÍSTICAS E EXPOSIÇÕES |

      |*7992* |  AULAS DE GOLF PUBLICA |

      |*7993* |  FORNECEDORES DE MÁQUINAS DE VIDEOGAME OU JOGOS |

      |*7994* |  LOJAS DE DIVERSÃO / VIDEO GAME / LAN HOUSE / CIBER CAFÉ |

      |*7995* |  CASSINOS, LOTERIAS E JOGOS DE AZAR |

      |*7996* |  PARQUE DE DIVERSAO, CIRCO E AFINS |

      |*7997* |  ACADEMIAS / CLUBES |

      |*7998* |  AQUÁRIOS E ZOOLÓGICOS |

      |*7999* |  SERVIÇOS DE RECREAÇÃO E FESTAS |

      |*8011* |  MÉDICOS (CLÍNICAS E CONSULTÓRIOS) |

      |*8021* |  DENTISTAS E ORTODONTISTAS (CLÍNICAS E CONSULTÓRIOS) |

      |*8031* |  OSTEOPATAS |

      |*8041* |  QUIROPRAXIA |

      |*8042* |  OFTAMOLOGISTA E OPTOMETRISTAS |

      |*8043* |  OPTICIANS, OPTICAL GOODS, AND EYEGLASSES |

      |*8049* |  TRATAMENTOS PODIÁTRICOS |

      |*8050* |  CASAS DE REPOUSO, CLÍN. DE RECUPERAÇÃO E ENFERMAGEM |

      |*8062* |  HOSPITAIS |

      |*8071* |  ANALISES CLÍNICAS MÉDICAS E DENTAIS |

      |*8099* |  MEDICINA EM GERAL E PRATICANTES DE SERVIÇOS DE SAÚDE |

      |*8111* |  SERVIÇOS JURÍDICOS - ADVOGADOS |

      |*8211* |  EDUCAÇÃO PRIMÁRIA E SECUNDÁRIA (ELEM./SEC.S.) |

      |*8220* |  UNIVERSIDADES E FACULDADES (COLLEGES/UNIV/JC/PROF.) |

      |*8241* |  EDUACAÇÃO A DISTÂNCIA (CORRESPONDENCE SCHOOLS) |

      |*8244* |  ESCOLA DE COMÉRCIOS E SECRETARIADO (BUS./SEC. SCHOOL) |

      |*8249* |  ESCOLA DE NEGÓCIOS/VOCAÇÕES (TRADE/VOCATIONS S.) |

      |*8299* |  COLEGIOS (SCHOOLS) |

      |*8351* |  SERVIÇOS DE CUIDADOS DE CRIANÇAS (CHILD CARE SVCS) |

      |*8398* |  ORGANIZAÇÕES DE SERVIÇOS BENEFICENTES E SOCIAIS |

      |*8641* |  ASSOCIAÇÕES CÍVICAS E SOCIAIS |

      |*8651* |  ORGANIZAÇÕES POLITICAS |

      |*8661* |  ORGANIZAÇÕES RELIGIOSAS |

      |*8675* |  ASSOCIAÇÃO DE CARROS |

      |*8699* |  ORG. SIND., ASSOC. CULT. E OTRS ASSOC. NÃO CLASSIF. |

      |*8734* |  LABORATÓRIOS DE TESTE (PARA TESTES NÃO MÉDICOS) |

      |*8911* |  ARQUIRETURA, ENGENHARIA E AGRIMENSURA |

      |*8931* |  CONTABILIDADE, AUDITORIA E SERVIÇOS DE CONTABILIDADE |

      |*8999* |  OUTROS SERVIÇOS PROFISSIONAIS DE ESPECIALIZADOS |

      |*9211* |  PENSÃO ALIMENTÍCIA (COURT COSTS/ALIMONY/SUPPORT) |

      |*9222* |  MULTAS (FINES) |

      |*9223* |  PAGAMENTOS DE TÍTULOS E FINANÇAS (BAIL AND BOND P.) |

      |*9311* |  PAGAMENTOS DE IMPOSTOS (TAX PAYMENTS) |

      |*9399* |  SERVIÇOS GOVERNAMENTAIS (GOVT SERV - DEFAULT) |

      |*9402* |  POSTAGENS (POSTAGE STAMPS) |

      |*9405* |  COMPRAS GOVERNAMENTAIS (INTRA-GOVERNMENT PURCHASES) |

      |*9406* |  Loteria de Propriedade do Governo (Países Específicos |

      |*9950* |  DEPART. DE COMPRAS (INTRA- COMPANY PURCHASES) |


      # Table of currency codes


      | Currency Code | Currency |

      | ----- |----------------------- |

      | **BRL** |   Brazilian real  |

      | *USD*  |  United States dollar  |

      | *EUR*  |  Euro  |

      | *YER*  |  Yemeni rial |

      | *ZAR*  |  South African rand  |

      | *AED*  |  United Arab Emirates dirham |

      | *AFN*  |  Afghan afghani  |

      | *ALL*  |  Albanian lek  |

      | *AMD*  |  Armenian dram |

      | *ANG*  |  Netherlands Antillean guilder |

      | *AOA*  |  Angolan kwanza  |

      | *ARS*  |  Argentine peso  |

      | *AUD*  |  Australian dollar |

      | *AWG*  |  Aruban florin |

      | *AZN*  |  Azerbaijani manat |

      | *BAM*  |  Bosnia and Herzegovina convertible mark |

      | *BBD*  |  Barbados dollar |

      | *BDT*  |  Bangladeshi taka  |

      | *BGN*  |  Bulgarian lev |

      | *BIF*  |  Burundian franc |

      | *BMD*  |  Bermudian dollar  |

      | *BND*  |  Brunei dollar |

      | *BOB*  |  Boliviano |

      | *BSD*  |  Bahamian dollar |

      | *BWP*  |  Botswana pula |

      | *BZD*  |  Belize dollar |

      | *CAD*  |  Canadian dollar |

      | *CDF*  |  Congolese franc |

      | *CHF*  |  Swiss franc |

      | *CLP*  |  Chilean peso  |

      | *CNY*  |  Chinese yuan[8] |

      | *COP*  |  Colombian peso  |

      | *CRC*  |  Costa Rican colon |

      | *CVE*  |  Cape Verdean escudo |

      | *CZK*  |  Czech koruna  |

      | *DJF*  |  Djiboutian franc  |

      | *DKK*  |  Danish krone  |

      | *DOP*  |  Dominican peso  |

      | *DZD*  |  Algerian dinar  |

      | *EGP*  |  Egyptian pound  |

      | *ETB*  |  Ethiopian birr  |

      | *ZMW*  |  Zambian kwacha  |

      | *FJD*  |  Fiji dollar |

      | *FKP*  |  Falkland Islands pound  |

      | *GBP*  |  Pound sterling  |

      | *GEL*  |  Georgian lari |

      | *GIP*  |  Gibraltar pound |

      | *GMD*  |  Gambian dalasi  |

      | *GNF*  |  Guinean franc |

      | *GTQ*  |  Guatemalan quetzal  |

      | *GYD*  |  Guyanese dollar |

      | *HKD*  |  Hong Kong dollar  |

      | *HNL*  |  Honduran lempira  |

      | *HRK*  |  Croatian kuna |

      | *HTG*  |  Haitian gourde  |

      | *HUF*  |  Hungarian forint  |

      | *IDR*  |  Indonesian rupiah |

      | *ILS*  |  Israeli new shekel  |

      | *INR*  |  Indian rupee  |

      | *ISK*  |  Icelandic króna |

      | *JMD*  |  Jamaican dollar |

      | *JPY*  |  Japanese yen  |

      | *KES*  |  Kenyan shilling |

      | *KGS*  |  Kyrgyzstani som |

      | *KHR*  |  Cambodian riel  |

      | *KMF*  |  Comoro franc  |

      | *KRW*  |  South Korean won  |

      | *KYD*  |  Cayman Islands dollar |

      | *KZT*  |  Kazakhstani tenge |

      | *LAK*  |  Lao kip |

      | *LBP*  |  Lebanese pound  |

      | *LKR*  |  Sri Lankan rupee  |

      | *LRD*  |  Liberian dollar |

      | *LSL*  |  Lesotho loti  |

      | *MAD*  |  Moroccan dirham |

      | *MDL*  |  Moldovan leu  |

      | *MGA*  |  Malagasy ariary |

      | *MKD*  |  Macedonian denar  |

      | *MMK*  |  Myanmar kyat  |

      | *MNT*  |  Mongolian tögrög  |

      | *MOP*  |  Macanese pataca |

      | *MRO*  |  Macanese pataca |

      | *MUR*  |  Mauritian rupee |

      | *MVR*  |  Maldivian rufiyaa |

      | *MWK*  |  Malawian kwacha |

      | *MXN*  |  Mexican peso  |

      | *MYR*  |  Malaysian ringgit |

      | *MZN*  |  Mozambican metical  |

      | *NAD*  |  Namibian dollar |

      | *NGN*  |  Nigerian naira  |

      | *NIO*  |  Nicaraguan córdoba  |

      | *NOK*  |  Norwegian krone |

      | *NPR*  |  Nepalese rupee  |

      | *NZD*  |  New Zealand dollar  |

      | *PAB*  |  Panamanian balboa |

      | *PEN*  |  Peruvian sol  |

      | *PGK*  |  Papua New Guinean kina  |

      | *PHP*  |  Philippine peso[12] |

      | *PKR*  |  Pakistani rupee |

      | *PLN*  |  Polish złoty  |

      | *PYG*  |  Paraguayan guaraní  |

      | *QAR*  |  Qatari riyal  |

      | *RON*  |  Romanian leu  |

      | *RSD*  |  Serbian dinar |

      | *RUB*  |  Russian ruble |

      | *RWF*  |  Rwandan franc |

      | *SAR*  |  Saudi riyal |

      | *SBD*  |  Solomon Islands dollar  |

      | *SCR*  |  Seychelles rupee  |

      | *SEK*  |  Swedish krona/kronor  |

      | *SGD*  |  Singapore dollar  |

      | *SHP*  |  Saint Helena pound  |

      | *SLL*  |  Sierra Leonean leone  |

      | *SOS*  |  Somali shilling |

      | *SRD*  |  Surinamese dollar |

      | *STD*  |  South Sudanese pound  |

      | *SZL*  |  Swazi lilangeni |

      | *THB*  |  Thai baht |

      | *TJS*  |  Tajikistani somoni  |

      | *TOP*  |  Tongan paʻanga  |

      | *TRY*  |  Turkish lira  |

      | *TTD*  |  Trinidad and Tobago dollar  |

      | *TWD*  |  New Taiwan dollar |

      | *TZS*  |  Tanzanian shilling  |

      | *UAH*  |  Ukrainian hryvnia |

      | *UGX*  |  Ugandan shilling  |

      | *UYU*  |  Uruguayan peso  |

      | *UZS*  |  Uzbekistan som  |

      | *VND*  |  Vietnamese đồng |

      | *VUV*  |  Vanuatu vatu  |

      | *WST*  |  Samoan tala |

      | *XAF*  |  CFA franc BEAC  |

      | *XCD*  |  East Caribbean dollar |

      | *XOF*  |  CFA franc BCEAO |

      | *XPF*  |  CFP franc (franc Pacifique) |


      # Table of supported countries and document types


      | Country Code | Document Type            | Group              |
      Country                |
      Meaning                                                                            
      |

      | ---- | --------------- | ------------------ | ---------------------- |
      -----------------------------------------------------------------------------------
      |

      | *AL*   | *NIPT*            | Vat                | Albania               
      | Vat Identifier (Numri i Identifikimit për Personin e
      Tatueshëm)                     |

      | *AD*   | *NRT*             | Tax                | Andorra               
      | Tax Identifier (Número de Registre
      Tributari)                                       |

      | *AR*   | *CBU*             | Bank               | Argentina             
      | Bank Account (Clave Bancaria
      Uniforme)                                              |

      | *AR*   | *CUIT*            | Tax                | Argentina             
      | Tax Identity (Código Único de Identificación
      Tributaria)                            |

      | *AR*   | *DNI*             | Person             | Argentina             
      | National Identity (Documento Nacional de
      Identidad)                                 |

      | *AT*   | *Businessid*      | Company            | Austria               
      | Austrian Company Register
      Numbers                                                   |

      | *AT*   | *TIN*             | Tax                | Austria               
      | Austrian tax identification number
      (Abgabenkontonummer)                             |

      | *AT*   | *UID*             | VAT                | Austria               
      | Austrian VAT number
      (Umsatzsteuer-Identifikationsnummer)                            |

      | *AT*   | *VNR*             | Person             | Austria               
      | Austrian social security
      number(Versicherungsnummer)                                |

      | *AU*   | *ABN*             | Company            | Australia             
      | Australian Business
      Number                                                          |

      | *AU*   | *ACN*             | Company            | Australia             
      | Australian Company
      Number                                                           |

      | *AU*   | *TFN*             | Tax/Person/Company | Australia             
      | Australian Tax File
      Number                                                          |

      | *BA*   | *JMBG*            | Person             | Bosnia and Herzegovina
      | Unique Master Citizen
      Number                                                        |

      | *BZ*   | *TIN*             | Person/Company     | Belize                
      | Brazilian Tax ID
      ()                                                                 |

      | *BE*   | *VAT*             | Company            | Belgium               
      | Belgian Enterprise
      Number                                                           |

      | *BG*   | *EGN*             | Person             | Bulgaria              
      | ЕГН, Единен граждански номер, Bulgarian personal identity
      codes                     |

      | *BG*   | *PNF*             | Person             | Bulgaria              
      | PNF (ЛНЧ, Личен номер на чужденец, Bulgarian number of a
      foreigner).                |

      | *BG*   | *VAT*             | Company            | Bulgaria              
      | Идентификационен номер по ДДС, Bulgarian VAT
      number                                 |

      | *BR*   | *CPF*             | Person             | Brazil                
      | Brazilian identity number (Cadastro de Pessoas
      Físicas)                             |

      | *BR*   | *CNPJ*            | Company            | Brazil                
      | Brazilian company number (Cadastro Nacional da Pessoa
      Jurídica)                     |

      | *BY*   | *UNP*             | Person/Company     | Belarus               
      | Учетный номер плательщика, the Belarus VAT
      number                                   |

      | *CA*   | *BN*              | Company            | Canada                
      | Company Identifier (Canadian Business
      Number)                                       |

      | *CA*   | *SIN*             | Person             | Canada                
      | Person Identifier (Social Insurance
      Number)                                         |

      | *CU*   | *NI*              | Person             | Cuba                  
      | Número de identidad, Cuban identity card
      numbers                                    |

      | *CY*   | *VAT*             | Company            | Cyprus                
      | Αριθμός Εγγραφής Φ.Π.Α. (Cypriot VAT
      number)                                        |

      | *CZ*   | *DIC*             | Company            | Czech Republic        
      | Daňové identifikační číslo, Czech VAT
      number                                        |

      | *CZ*   | *RC*              | Person             | Czech Republic        
      | Rodné číslo, the Czech birth
      number                                                 |

      | *CH*   | *SSN*             | Person             | Swisserland           
      | Swiss social security number
      ("Sozialversicherungsnummer")                          |

      | *CH*   | *UID*             | Company            | Swisserland           
      | Unternehmens-Identifikationsnummer, Swiss business
      identifier                       |

      | *CH*   | *VAT*             | Company            | Swisserland           
      | Mehrwertsteuernummer, the Swiss VAT
      number                                          |

      | *CL*   | *RUT*             | Tax                | Chile                 
      | Tax Identifier (Rol Unico Tributario)
      [RUN]                                         |

      | *CN*   | *RIC*             | Person             | China                 
      | Person Identifier (Chinese Resident Identity Card
      Number)                           |

      | *CN*   | *USCC*            | Company            | China                 
      | Company Identifier (Unified Social Credit Code, 统一社会信用代码, China tax
      number) |

      | *CO*   | *NIT*             | Tax                | Columbia              
      | Tax Identifier (Número de Identificación
      Tributaria)                                |

      | *CR*   | *CPF*             | Person             | Costa Rica            
      | Person Identifier (Cédula de Persona
      Física)                                        |

      | *CR*   | *CPJ*             | Company            | Costa Rica            
      | Company Identifier (Cédula de Persona
      Jurídica)                                     |

      | *CR*   | *CR*              | Person             | Costa Rica            
      | Person Identifier (Cédula de
      Residencia)                                            |

      | *DE*   | *IDNR*            | Person             | Germany               
      | Steuerliche Identifikationsnummer, German personal tax
      number                       |

      | *DE*   | *STNR*            | Company            | Germany               
      | Steuernummer, German tax
      number                                                     |

      | *DE*   | *VAT*             | Company            | Germany               
      | Vat
      identifier                                                                     
      |

      | *DK*   | *VAT*             | Company            | Denmark               
      | Momsregistreringsnummer, Danish VAT
      number                                          |

      | *DO*   | *CEDULA*          | Person             | Dominican Republic    
      | Person Identifier (Cédula de
      Residencia)                                            |

      | *DO*   | *NCF*             | Vat                | Dominican Republic    
      | Tax Receipt Number (Números de Comprobante
      Fiscal)                                  |

      | *DO*   | *RNC*             | Tax                | Dominican Republic    
      | Person Identifier (Registro Nacional del
      Contribuyente)                             |

      | *EC*   | *CI*              | Person             | Ecuador               
      | Ecuadorian person identifier (Cédula de
      identidad)                                  |

      | *EE*   | *IK*              | Person             | Estonia               
      | Isikukood (Estonian Personcal ID
      number).                                           |

      | *EE*   | *KMKR*            | Company            | Estonia               
      | KMKR (Käibemaksukohuslase, Estonian VAT
      number)                                     |

      | *EE*   | *Registrikood*    | Company            | Estonia               
      | Registrikood (Estonian organisation registration
      code)                              |

      | *EC*   | *RUC*             | Tax/Vat            | Ecuador               
      | Ecuadorian company tax number (Registro Único de
      Contribuyentes)                    |

      | *SV*   | *NIT*             | Tax                | El Salvador           
      | Tax Identifier (Número de Identificación
      Tributaria)                                |

      | *GT*   | *CUI*             | Person             | Guatemala             
      | Guatemala person (Código Único de
      Identificación)                                   |

      | *GT*   | *NIT*             | Company            | Guatemala             
      | Guatemala company tax number (Número de Identificación
      Tributaria)                  |

      | *FI*   | *ALV*             | Company            | Finland               
      | ALV nro (Arvonlisäveronumero, Finnish VAT
      number)                                   |

      | *FI*   | *HETU*            | Person             | Finland               
      | HETU (Henkilötunnus, Finnish personal identity
      code)                                |

      | *FI*   | *YTUNNUS*         | Company            | Finland               
      | Y-tunnus (Finnish business
      identifier)                                              |

      | *FR*   | *NIF*             | Person             | France                
      | NIF (Numéro d'Immatriculation Fiscale, French tax identification
      number)            |

      | *GB*   | *UTR*             | Person             | Great Brittan         
      | UTR (United Kingdom Unique Taxpayer
      Reference)                                      |

      | *GB*   | *VAT*             | Company            | Great Brittan         
      | VAT (United Kingdom (and Isle of Man) VAT registration
      number)                      |

      | *GR*   | *AMKA*            | Company            | Greece                
      | AMKA (Αριθμός Μητρώου Κοινωνικής Ασφάλισης, Greek social security
      number)           |

      | *GR*   | *VAT*             | Company            | Greece                
      | FPA, ΦΠΑ, ΑΦΜ (Αριθμός Φορολογικού Μητρώου, the Greek VAT
      number)                   |

      | *FR*   | *NIR*             | Person             | France                
      | NIR (French personal identification
      number)                                         |

      | *FR*   | *SIREN*           | Company            | France                
      | SIREN (a French company identification
      number)                                      |

      | *FR*   | *SIRET*           | Company            | France                
      | SIRET (a French company establishment identification
      number)                        |

      | *FR*   | *TVA*             | Vat                | France                
      | VAT
      Identifier                                                                     
      |

      | *HR*   | *OIB*             | Person             | Croatia               
      | Osobni identifikacijski broj, Croatian identification
      number                        |

      | *HK*   | *HKID*            | Person             | Hong Kong             
      | Hong Kong Identity
      Card                                                             |

      | *HU*   | *ANUM*            | Vat                | Hungaria              
      | ANUM (Közösségi adószám, Hungarian VAT
      number)                                      |

      | *IS*   | *KENNITALA*       | Person/Company     | Iceland               
      | Icelandic personal and organisation identity
      code                                   |

      | *IS*   | *VSK*             | Vat                | Iceland               
      | Virðisaukaskattsnúmer, Icelandic VAT
      number                                         |

      | *ID*   | *NPWP*            | Person/Company     | Indonesia             
      | NPWP (Nomor Pokok Wajib Pajak, Indonesian VAT
      Number).                              |

      | *IE*   | *PPS*             | Person             | Ireland               
      | Personal Public Service Number, Irish personal
      number                               |

      | *IE*   | *VAT*             | Tax/Vat            | Ireland               
      | Ireland Value Added Tax
      ID                                                          |

      | *IN*   | *AADHAAR*         | Company            | India                 
      | Indian digital resident personal identity
      number                                    |

      | *IN*   | *PAN*             | Person             | India                 
      | Permanent Account Number, Indian income tax
      identifier                              |

      | *IL*   | *IDNR*            | Person             | Israel                
      | Identity Number (Mispar Zehut, מספר זהות, Israeli identity
      number)                  |

      | *IL*   | *HR*              | Company            | Israel                
      | Company Number (מספר חברה, or short ח.פ. Israeli company
      number)                    |

      | *IT*   | *AIC*             | Drug               | Italy                 
      | Italian code for identification of
      drugs                                            |

      | *IT*   | *CODICEFISCALE*   | Person             | Italy                 
      | Codice Fiscale (Italian tax code for
      individuals)                                   |

      | *IT*   | *IVA*             | Vat                | Italy                 
      | Partita IVA (Italian VAT
      number)                                                    |

      | *LI*   | *PEID*            | Person/Company     | Liechtenstein         
      |
      Personenidentifikationsnummer                                                      
      |

      | *LT*   | *ASMENS*          | Person             | Lithuanian            
      | Asmens kodas (Person
      Number)                                                        |

      | *LT*   | *PVM*             | Vat                | Lithuanian            
      | Pridėtinės vertės mokestis mokėtojo
      kodas                                           |

      | *LU*   | *TVA*             | Vat                | Luxembourgian         
      | taxe sur la valeur
      ajoutée                                                          |

      | *LV*   | *PVN*             | Person/Vat         | Latvian               
      | Pievienotās vērtības
      nodokļa                                                        |

      | *MK*   | *JMBG*            | Person             | Macedonia             
      | Unique Master Citizen Number (Единствен матичен број на
      граѓанинот)                 |

      | *MC*   | *TVA*             | Vat                | Monaco                
      | taxe sur la valeur ajoutée, Monacan VAT
      number                                      |

      | *MD*   | *IDNO*            | Vat                | Moldavia              
      | Moldavian VAT
      number                                                                |

      | *MT*   | *VAT*             | Vat                | Malta                 
      | Maltese VAT
      number                                                                  |

      | *MU*   | *NID*             | Person             | Mauritius             
      | ID number (Mauritian national
      identifier)                                           |

      | *JP*   | *CN*              | Company            | Japan                 
      | 法人番号, hōjin bangō, Japanese Corporate
      Number                                    |

      | *KR*   | *BRN*             | Company            | South Korea           
      | 사업자 등록 번호, South Korea Business Registration
      Number)                         |

      | *KR*   | *RRN*             | Person             | South Korea           
      | South Korean resident registration
      number                                           |

      | *MX*   | *RFC*             | Tax/Vat            | Mexico                
      | Tax Identifier (Registro Federal de
      Contribuyentes)                                 |

      | *MX*   | *CURP*            | Person             | Mexico                
      | Individual Identifier (Clave Única de Registro de
      Población)                        |

      | *MX*   | *CLABE*           | Bank               | Mexico                
      | Bank Account (Clave Bancaria
      Estandarizada)                                         |

      | *ME*   | *JMBG*            | Person             | Montenegro            
      | Unique Master Citizen
      Number                                                        |

      | *MY*   | *NRIC*            | Person             | Malaysia              
      | Malaysian National Registration Identity Card
      Number                                |

      | *NL*   | *BSN*             | Person             | Netherlands           
      | Burgerservicenummer, the Dutch citizen identification
      number                        |

      | *NL*   | *BTW*             | Vat                | Netherlands           
      | Btw-identificatienummer (Omzetbelastingnummer, the Dutch VAT
      number)                |

      | *NL*   | *Onderwijsnummer* | Person             | Netherlands           
      | Onderwijsnummer (the Dutch student identification
      number)                           |

      | *NZ*   | *IRD*             | Person/Company     | New Zealand           
      | New Zealand Inland Revenue Department (Te Tari Tāke)
      number                         |

      | *NZ*   | *BANK*            | Bank               | New Zealand           
      | New Zealand Bank Account numbers -
      checkdigit                                       |

      | *NO*   | *Fodsels*         | Person             | Norway                
      | Fødselsnummer (Norwegian birth number, the national identity
      number)                |

      | *NO*   | *Konto*           | Bank               | Norway                
      | Konto nr. (Norwegian bank account
      number)                                           |

      | *NO*   | *MVA*             | Vat                | Norway                
      | Merverdiavgift, Norwegian VAT
      number                                                |

      | *NO*   | *Orgnr*           | Company            | Norway                
      | Organisasjonsnummer, Norwegian organisation
      number                                  |

      | *PY*   | *RUC*             | Tax/Vat            | Paraguay              
      | Tax Identifier (Registro Único de
      Contribuyentes)                                   |

      | *PE*   | *CUI*             | Person             | Peru                  
      | Person Identifier (Cédula Única de
      Identidad)                                       |

      | *PE*   | *RUC*             | Tax/Vat            | Peru                  
      | Tax Identifier (Registro Único de
      Contribuyentes)                                   |

      | *PE*   | *CE*              | Person             | Peru                  
      | Person Identifier (Carné de
      Extranjería)                                            |

      | *PK*   | *CNIC*            | Person             | Pakistan              
      | National Identity
      Card                                                              |

      | *PK*   | *NTN*             | Company            | Pakistan              
      | Tax Identification
      Number                                                           |

      | *PL*   | *NIP*             | Vat                | Poland                
      | Numer Identyfikacji Podatkowej, Polish VAT
      number                                   |

      | *PL*   | *PESEL*           | Person             | Poland                
      | Polish national identification
      number                                               |

      | *PL*   | *REGON*           | Company            | Poland                
      | Rejestr Gospodarki Narodowej, Polish register of economic
      units                     |

      | *PT*   | *NIF*             | Vat                | Portugual             
      | Número de identificação fiscal, Portuguese VAT
      number                               |

      | *RU*   | *INN*             | Tax/Vat            | Russia                
      | Tax Identifier (Идентификационный номер
      налогоплательщика)                          |

      | *RO*   | *CF*              | Vat                | Romania               
      | Cod de înregistrare în scopuri de TVA, Romanian VAT
      number                          |

      | *RO*   | *CNP*             | Person             | Romania               
      | Cod Numeric Personal, Romanian Numerical Personal
      Code)                             |

      | *RO*   | *CUI*             | Tax                | Romania               
      | Codul Unic de Înregistrare, Romanian company
      identifier                             |

      | *RO*   | *ONRC*            | Company            | Romania               
      | Ordine din Registrul Comerţului, Romanian Trade Register
      identifier                 |

      | *SM*   | *COE*             | Company            | San Marcos            
      | Codice operatore economico, San Marino national tax
      number                          |

      | *RS*   | *PIB*             | Vat                | Serbia                
      | Poreski identifikacioni broj Tax identification
      number                              |

      | *RS*   | *JMBG*            | Person             | Serbia                
      | Unique Master Citizen Number (Jedinstveni matični broj
      građana)                     |

      | *SE*   | *ORGNR*           | Company            | Sweden                
      | Organisationsnummer, Swedish company
      number                                         |

      | *SE*   | *PERSONNUMMER*    | Person             | Sweden                
      | Personnummer (Swedish personal identity
      number)                                     |

      | *SE*   | *VAT*             | Vat                | Sweden                
      | VAT (Moms, Mervärdesskatt, Swedish VAT
      number)                                      |

      | *SG*   | *UEN*             | Company            | Singapore             
      | Singapore's Unique Entity
      Number                                                    |

      | *TH*   | *IDNR*            | Person             | Thailand              
      | Thai National ID
      (บัตรประจำตัวประชาชนไทย)                                           |

      | *TW*   | *UBN*             | Company            | Taiwan                
      | Unified Business Number, 統一編號, Taiwanese tax
      number                             |

      | *TR*   | *TCKIMLIK*        | Person             | Turkey                
      | Türkiye Cumhuriyeti Kimlik Numarası (Personal
      ID)                                   |

      | *TR*   | *VKN*             | Tax                | Turkey                
      | Vergi Kimlik Numarası, Turkish tax identification
      number                            |

      | *SI*   | *DDV*             | Vatl               | Slovenia              
      | ID za DDV (Davčna številka, Slovenian VAT
      number)                                   |

      | *SI*   | *JMBG*            | Person             | Slovenia              
      | Unique Master Citizen Number (Enotna matična številka
      občana)                       |

      | *SK*   | *DPH*             | Vat                | Slovakia              
      | IČ DPH (IČ pre daň z pridanej hodnoty, Slovak VAT
      number)                           |

      | *SK*   | *RC*              | Person             | Slovakia              
      | RČ (Rodné číslo, the Slovak birth
      number)                                           |

      | *ES*   | *CIF*             | Tax/Vat            | Spain                 
      | Tax Identifier (Código de Identificación
      Fiscal)                                    |

      | *ES*   | *DNI*             | Person             | Spain                 
      | Identity code (Documento Nacional de
      Identidad)                                     |

      | *ES*   | *NIE*             | Person             | Spain                 
      | Identity code foreigner (Número de Identificación de
      Extranjero)                    |

      | *ES*   | *NIF*             | Tax                | Spain                 
      | Tax Identifier (Número de Identificación
      Fiscal)                                    |

      | *UY*   | *RUT*             | Tax/Vat            | Uruguay               
      | Tax Identifier (Registro Único
      Tributario)                                          |

      | *UY*   | *CEDULA*          | Person             | Uruguay               
      | Person Identifier (Cédula de
      Residencia)                                            |

      | *UY*   | *NIE*             | Person             | Uruguay               
      | ForeignersI identification
      Number                                                   |

      | *UA*   | *RNTRC*           | Person             | Ukraine               
      | КПП, RNTRC (Individual taxpayer registration number in
      Ukraine)                     |

      | *UA*   | *EDRPOU*          | Company            | Ukraine               
      | ЄДРПОУ, EDRPOU (Identifier for enterprises and organizations in
      Ukraine)            |

      | *US*   | *EIN*             | Tax/Company        | United States         
      | Tax Identifier (Employer Identification
      Number)                                     |

      | *US*   | *SSN*             | Tax/Individual     | United States         
      | Tax Identifier (Social Security
      Number)                                             |

      | *VE*   | *RIF*             | Vat                | Venezuelan            
      | Vat Identifier (Registro de Identificación
      Fiscal)                                  |

      | *VN*   | *MST*             | Company            | Vietnam               
      | Mã số thuế, Vietnam tax
      number                                                      |

      | *ZA*   | *IDNR*            | Person             | South Africa          
      | ID number (South African Identity Document
      number).                                 |

      | *ZA*   | *TIN*             | Person/Company     | South Africa          
      | TIN (South African Tax Identification Number).     
    x-displayName: Table of types
  - name: Client-token
    description: >
      You can create temporary public keys to access the API with limited scope
      and expiration time.


      We recommend using this type of key when you need to expose the key in a
      client-side application.

      In this case, you should make a call to the /auth service from your secret
      key, requesting the creation of a public key with limited scope.


      The created public key can be used normally as if it were your account's
      secret key, but with the scope restriction and being invalidated upon
      expiration.


      **Parameters’ details of the public key’s request:**


      <SchemaDefinition schemaRef="#/components/schemas/ClientToken_AuthRequest"
      />


      **Public key creation response**


      <SchemaDefinition
      schemaRef="#/components/schemas/ClientToken_AuthResponse" />
    x-displayName: Client-token
  - name: Tokens
    description: >
      **Parameters’ details of the card token's request:**


      <SchemaDefinition schemaRef="#/components/schemas/Cards_TokenRequest"
      exampleRef="#/components/examples/Cards_TokenRequest" />
    x-displayName: Tokens
  - name: Cards
    description: |
      **Attributues of a card object**

      <SchemaDefinition schemaRef="#/components/schemas/Cards_CardRequest"  />
    x-displayName: Cards
  - name: Charges
    description: >

      To implement a charge, you must create a charge object. You can retrieve
      details of individual transactions, or list all the charges made at a
      given merchant. Charges are identified by a 'unique' id.


      **Basic data of an charge object**


      <SchemaDefinition schemaRef="#/components/schemas/Charges_Charge"
      exampleRef="#/components/examples/Charges_ChargeCard" />
    x-displayName: Charges
  - name: Customers
    description: >

      Through the customer’s API you can create, edit, list, and delete
      shopper’s data for use in card tokenization services, PIX charges,
      Invoices (payment slips), use in anti-fraud and recurrence engine
      analysis.


      In order to maintain data integrity, email and document (Personal
      registration number/National registry of legal entities) information are
      unique to customers on your Malga account, and no two buyers can be the
      same.


      # Associating a card with a customer – Basic Flow

      - Create a customer by entering basic ID and address data

      - Create a new card token from cardholder data

      - Create a new card from the generated token and store the generated
      cardId for future association with the customer

      - Associate the created card with the created customer using the card
      association service with buyer

      - List the cards associated to the buyer using the list of cards per
      customer service


      ### See [Table of supported countries and document
      types](#section/Table-of-supported-countries-and-document-types) para
      criação de customer


      ```bash
        curl --location --request POST 'https://api.malga.io/v1/customers' \
          --header 'X-Client-Id: <YOUR_CLIENT_ID>' \
          --header 'X-Api-Key: <YOUR_SECRET_KEY>' \
          --header 'Content-Type: application/json' \
          --data-raw '{
              "name": "Jose Bonifacio Da Silveira",
              "phoneNumber": "21 98889999099",
              "email": "jose@gmail.com",
              "document": {
                  "number": "72912053013",
                  "type": "cpf",
                  "country": "BR"
              },
              "address": {
                  "country": "BR",
                  "state": "Rio de Janeiro",
                  "city": "Rio de Janeiro",
                  "district": "Leblon",
                  "zipCode": "25650-011",
                  "street": "Av Geraldo Cardoso",
                  "streetNumber": "205",
                  "complement": "Apto 203"
              }
          }'
      ```


      # Basic billing flow using PIX/Invoices (payment slip) from customer
        - Create a customer with the basic ID and address data
        - Create a new charge informing as paymentSource, the customer previously created, so that we can use the buyer's data to generate the charge.

      **Basic data of customer object**


      <SchemaDefinition
      schemaRef="#/components/schemas/Customers_CustomerRequest"
      exampleRef="#/components/examples/Customers_CustomerRequest" />
    x-displayName: Customers
  - name: Sessions
    description: >

      Using sessions API it's possible to create an order, with items, payment
      methods and more, that can be payed through an endpoint or integrated to
      MalgaCheckout.


      # Creating and paying a session

      - Create a `session` informing the minimum required data

      - Using the `publicKey` returned by the creation or got by the details
      endpoint on `X-Api-Key` to authorize the payment 


      **Basic data of a session object**


      <SchemaDefinition schemaRef="#/components/schemas/Sessions_Session"
      exampleRef="#/components/examples/Sessions_Session" />
    x-displayName: Sessions
paths:
  /v1/auth:
    post:
      tags:
        - Client-token
      summary: Create public key for client-side integration
      operationId: createClientToken
      requestBody:
        description: Creat authentication token
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientToken_AuthRequest'
            example:
              scope:
                - tokens
              expires: 31104000
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientToken_AuthResponse'
              example:
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                publicKey: <YOUR_PUBLIC_KEY>
                scope:
                  - tokens
                expires: 31104000
                createdAt: 20200110 00:00:00
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientToken_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientToken_ErrorResponse'
      security:
        - ClientToken_X-Client-ID: []
  /v1/tokens:
    post:
      tags:
        - Tokens
      summary: Create new card token
      operationId: createToken
      requestBody:
        description: Tokenize credit card
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cards_TokenRequest'
            example:
              cardHolderName: JOSE DAS NEVES
              cardNumber: '4019598346009339'
              cardCvv: '123'
              cardExpirationDate: 12/2026
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_TokenResponse'
              example:
                id: 82aba896-9e37-45b6-aa90-d510c9050596
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                createdAt: 2012-06-30 23:59:59 +0000
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_ErrorResponse'
      security:
        - Cards_X-Client-ID: []
  /v1/cards:
    post:
      tags:
        - Cards
      summary: Create a new card from card token
      operationId: createCard
      requestBody:
        description: Create credit card
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cards_CardRequest'
            example:
              tokenId: 82aba896-9e37-45b6-aa90-d510c9050596
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_CardResponse'
              example:
                id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                customerId: 82aba896-9e37-45b6-aa90-d510c9050596
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                expirationMonth: '12'
                expirationYear: '2026'
                brand: Visa
                cvvChecked: true
                fingerprint: cbd4a441-c63c-4dee-ac6b-bfa7fa1df818
                first6digits: '401959'
                last4digits: '9339'
                createdAt: 2012-06-30 23:59:59 +0000
                status: active
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_ErrorResponse'
      security:
        - Cards_X-Client-ID: []
    get:
      tags:
        - Cards
      summary: List cards
      operationId: getCards
      parameters:
        - in: query
          name: page
          schema:
            type: string
          required: false
          description: page number
        - in: query
          name: limit
          schema:
            type: string
          required: false
          description: total itens per page
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_CardList'
              example:
                meta:
                  itemCount: 10
                  totalItems: 20
                  itemsPerPage: 10
                  totalPages: 5
                  currentPage: 2
                items:
                  - id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                    customerId: 82aba896-9e37-45b6-aa90-d510c9050596
                    clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                    expirationMonth: '12'
                    expirationYear: '2026'
                    brand: Visa
                    cvvChecked: true
                    fingerprint: cbd4a441-c63c-4dee-ac6b-bfa7fa1df818
                    first6digits: '401959'
                    last4digits: '9339'
                    createdAt: 2012-06-30 23:59:59 +0000
                    status: active
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_ErrorResponse'
      security:
        - Cards_X-Client-ID: []
  /v1/cards/{id}:
    get:
      tags:
        - Cards
      summary: Get card details
      operationId: getCardById
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Card ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_CardResponse'
              example:
                id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                customerId: 82aba896-9e37-45b6-aa90-d510c9050596
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                expirationMonth: '12'
                expirationYear: '2026'
                brand: Visa
                cvvChecked: true
                fingerprint: cbd4a441-c63c-4dee-ac6b-bfa7fa1df818
                first6digits: '401959'
                last4digits: '9339'
                createdAt: 2012-06-30 23:59:59 +0000
                status: active
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards_ErrorResponse'
      security:
        - Cards_X-Client-ID: []
  /v1/charges:
    post:
      tags:
        - Charges
      summary: Create new charge
      operationId: createCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Charges_ChargeRequest'
            examples:
              card:
                summary: Credit card example
                value:
                  merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
                  amount: 150
                  currency: BRL
                  statementDescriptor: LOJA JOAO
                  description: Descrição longa da cobrança
                  capture: false
                  orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                  paymentMethod:
                    paymentType: credit
                    installments: 1
                  paymentSource:
                    sourceType: card
                    cardId: 148d5db0-f1c3-439f-902d-f1f268086e1d
              pix:
                summary: PIX example
                value:
                  merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
                  amount: 150
                  currency: BRL
                  statementDescriptor: LOJA JOAO
                  description: Descrição longa da cobrança
                  capture: true
                  orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                  paymentMethod:
                    paymentType: pix
                    expiresIn: 3600
                  paymentSource:
                    sourceType: customer
                    customer:
                      name: Customer test
                      email: jose2@gmail.com
                      document:
                        number: '97055503019'
                        type: cpf
                      phoneNumber: 21 98889999099
              boleto:
                summary: Boleto example
                value:
                  merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
                  amount: 150
                  currency: BRL
                  statementDescriptor: LOJA JOAO
                  description: Descrição longa da cobrança
                  capture: true
                  orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                  paymentMethod:
                    paymentType: boleto
                    expiresDate: '2022-12-31'
                    instructions: Instruções para pagamento do boleto
                    interest:
                      days: 1
                      amount: 100
                      percentage: 0.2
                    fine:
                      days: 2
                      amount: 200
                      percentage: 0
                  paymentSource:
                    sourceType: customer
                    customer:
                      name: Customer test
                      email: jose2@gmail.com
                      document:
                        number: '97055503019'
                        type: cpf
                      phoneNumber: 21 98889999099
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ChargeResponse'
              examples:
                card:
                  summary: Credit card charge example
                  value:
                    value:
                      id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                      clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                      createdAt: 2012-06-30 23:59:59 +0000
                      amount: 150
                      currency: BRL
                      orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                      statementDescriptor: LOJA JOAO
                      description: Descrição longa da cobrança
                      capture: false
                      status: pre_authorized
                      paymentMethod:
                        paymentType: credit
                        installments: 1
                      paymentSource:
                        sourceType: card
                        card:
                          cardNumber: '5261424250184574'
                          cardCvv: '321'
                          cardExpirationDate: 06/2028
                          cardHolderName: JOAO DA SILVA
                      transactionRequests:
                        - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                          idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                          providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                          providerType: STRIPE
                          transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                          amount: 1500
                          authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                          requestStatus: success
                          requestType: authorization
                          responseTs: 2633ms
                          createdAt: '2021-08-12T16:08:39.536Z'
                          updatedAt: '2021-08-12T16:08:42.212Z'
                          providerAuthorization:
                            networkAuthorizationCode: '00'
                            networkResponseCode: ''
                pix:
                  summary: PIX charge example
                  value:
                    id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                    clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                    createdAt: 2012-06-30 23:59:59 +0000
                    amount: 150
                    currency: BRL
                    statementDescriptor: LOJA JOAO
                    description: Descrição longa da cobrança
                    capture: true
                    status: pending
                    orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                    paymentMethod:
                      paymentType: pix
                      expiresIn: 3600
                      qrCodeData: >-
                        00020101021126510014BR.GOV.BCB.PIX0129K89VdiUgWN1B3p0IHrgHkNHg9tX5F52040000530398654040.155802BR5913Customer
                        test600062070503***630431C0
                      qrCodeImageUrl: https://....
                    paymentSource:
                      sourceType: customer
                      customerId: 1cdcf0c9-eb04-4e43-b9b2-b7a4acdead1f
                    transactionRequests:
                      - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                        idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                        providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                        providerType: STRIPE
                        transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                        amount: 1500
                        authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                        requestStatus: success
                        requestType: authorization
                        responseTs: 2633ms
                        createdAt: '2021-08-12T16:08:39.536Z'
                        updatedAt: '2021-08-12T16:08:42.212Z'
                        providerAuthorization:
                          networkAuthorizationCode: '00'
                          networkResponseCode: ''
                boleto:
                  summary: Boleto charge example
                  value:
                    id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                    clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                    createdAt: 2012-06-30 23:59:59 +0000
                    amount: 150
                    currency: BRL
                    statementDescriptor: LOJA JOAO
                    description: Descrição longa da cobrança
                    capture: true
                    status: pending
                    paymentMethod:
                      paymentType: boleto
                      expiresDate: '2021-12-31'
                      barcodeData: '412343241324321431241341'
                      barcodeImageUrl: https://....
                    paymentSource:
                      sourceType: customer
                      customerId: 1cdcf0c9-eb04-4e43-b9b2-b7a4acdead1f
                    transactionRequests:
                      - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                        idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                        providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                        providerType: STRIPE
                        transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                        amount: 1500
                        authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                        requestStatus: success
                        requestType: authorization
                        responseTs: 2633ms
                        createdAt: '2021-08-12T16:08:39.536Z'
                        updatedAt: '2021-08-12T16:08:42.212Z'
                        providerAuthorization:
                          networkAuthorizationCode: '00'
                          networkResponseCode: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
      security:
        - Charges_X-Client-ID: []
    get:
      tags:
        - Charges
      summary: List charges
      operationId: getCharges
      parameters:
        - in: query
          name: page
          schema:
            type: string
          required: false
          description: page number
        - in: query
          name: limit
          schema:
            type: string
          required: false
          description: total itens per page
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ChargeList'
              example:
                meta:
                  itemCount: 10
                  totalItems: 20
                  itemsPerPage: 10
                  totalPages: 5
                  currentPage: 2
                items:
                  - id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                    customerId: 82aba896-9e37-45b6-aa90-d510c9050596
                    clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                    createdAt: 2012-06-30 23:59:59 +0000
                    amount: 150
                    currency: BRL
                    statementDescriptor: LOJA JOAO
                    description: Descrição longa da cobrança
                    capture: false
                    orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                    paymentMethod:
                      paymentType: credit
                      installments: 1
                    paymentSource:
                      sourceType: card
                      cardId: 148d5db0-f1c3-439f-902d-f1f268086e1d
                    transactionRequests:
                      - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                        idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                        providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                        providerType: STRIPE
                        transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                        amount: 1500
                        authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                        requestStatus: success
                        requestType: authorization
                        responseTs: 2633ms
                        createdAt: '2021-08-12T16:08:39.536Z'
                        updatedAt: '2021-08-12T16:08:42.212Z'
                        providerAuthorization:
                          networkAuthorizationCode: '00'
                          networkResponseCode: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
      security:
        - Charges_X-Client-ID: []
  /v1/charges/{id}:
    get:
      tags:
        - Charges
      summary: Get charge details
      operationId: getChargeByid
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Charge ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ChargeResponse'
              example:
                id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                createdAt: 2012-06-30 23:59:59 +0000
                amount: 150
                currency: BRL
                orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                statementDescriptor: LOJA JOAO
                description: Descrição longa da cobrança
                capture: false
                status: pre_authorized
                paymentMethod:
                  paymentType: credit
                  installments: 1
                paymentSource:
                  sourceType: card
                  card:
                    cardNumber: '5261424250184574'
                    cardCvv: '321'
                    cardExpirationDate: 06/2028
                    cardHolderName: JOAO DA SILVA
                transactionRequests:
                  - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                    idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                    providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                    providerType: STRIPE
                    transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                    amount: 1500
                    authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                    requestStatus: success
                    requestType: authorization
                    responseTs: 2633ms
                    createdAt: '2021-08-12T16:08:39.536Z'
                    updatedAt: '2021-08-12T16:08:42.212Z'
                    providerAuthorization:
                      networkAuthorizationCode: '00'
                      networkResponseCode: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
      security:
        - Charges_X-Client-ID: []
    post:
      tags:
        - Charges
      summary: Change the status of a charge in the sandbox environment
      operationId: updateChargeStatus
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: id of the charge you want to change in the sandbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Charges_UpdateChargeStatusRequest'
            example:
              status: charged_back
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ChargeResponse'
              example:
                id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                createdAt: 2012-06-30 23:59:59 +0000
                amount: 150
                currency: BRL
                orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                statementDescriptor: LOJA JOAO
                description: Descrição longa da cobrança
                capture: false
                status: pre_authorized
                paymentMethod:
                  paymentType: credit
                  installments: 1
                paymentSource:
                  sourceType: card
                  card:
                    cardNumber: '5261424250184574'
                    cardCvv: '321'
                    cardExpirationDate: 06/2028
                    cardHolderName: JOAO DA SILVA
                transactionRequests:
                  - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                    idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                    providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                    providerType: STRIPE
                    transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                    amount: 1500
                    authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                    requestStatus: success
                    requestType: authorization
                    responseTs: 2633ms
                    createdAt: '2021-08-12T16:08:39.536Z'
                    updatedAt: '2021-08-12T16:08:42.212Z'
                    providerAuthorization:
                      networkAuthorizationCode: '00'
                      networkResponseCode: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
      security:
        - Charges_X-Client-ID: []
  /v1/charges/{id}/capture:
    post:
      tags:
        - Charges
      summary: Capture pre-authorized charge
      operationId: captureCharge
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: pre-authorized ChargeResponse ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Charges_CaptureRequest'
            example:
              amount: 150
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ChargeResponse'
              example:
                id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                createdAt: 2012-06-30 23:59:59 +0000
                amount: 150
                currency: BRL
                orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                statementDescriptor: LOJA JOAO
                description: Descrição longa da cobrança
                capture: false
                status: pre_authorized
                paymentMethod:
                  paymentType: credit
                  installments: 1
                paymentSource:
                  sourceType: card
                  card:
                    cardNumber: '5261424250184574'
                    cardCvv: '321'
                    cardExpirationDate: 06/2028
                    cardHolderName: JOAO DA SILVA
                transactionRequests:
                  - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                    idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                    providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                    providerType: STRIPE
                    transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                    amount: 1500
                    authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                    requestStatus: success
                    requestType: authorization
                    responseTs: 2633ms
                    createdAt: '2021-08-12T16:08:39.536Z'
                    updatedAt: '2021-08-12T16:08:42.212Z'
                    providerAuthorization:
                      networkAuthorizationCode: '00'
                      networkResponseCode: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
      security:
        - Charges_X-Client-ID: []
  /v1/charges/{id}/void:
    post:
      tags:
        - Charges
      summary: Refund authorized charge
      operationId: voidCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Charges_VoidRequest'
            example:
              amount: 150
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Charge ID
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ChargeResponse'
              example:
                id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                createdAt: 2012-06-30 23:59:59 +0000
                amount: 150
                currency: BRL
                orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
                statementDescriptor: LOJA JOAO
                description: Descrição longa da cobrança
                capture: false
                status: pre_authorized
                paymentMethod:
                  paymentType: credit
                  installments: 1
                paymentSource:
                  sourceType: card
                  card:
                    cardNumber: '5261424250184574'
                    cardCvv: '321'
                    cardExpirationDate: 06/2028
                    cardHolderName: JOAO DA SILVA
                transactionRequests:
                  - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                    idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                    providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                    providerType: STRIPE
                    transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                    amount: 1500
                    authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                    requestStatus: success
                    requestType: authorization
                    responseTs: 2633ms
                    createdAt: '2021-08-12T16:08:39.536Z'
                    updatedAt: '2021-08-12T16:08:42.212Z'
                    providerAuthorization:
                      networkAuthorizationCode: '00'
                      networkResponseCode: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charges_ErrorResponse'
      security:
        - Charges_X-Client-ID: []
  /v1/customers:
    post:
      summary: Create new customer
      operationId: createCustomer
      parameters:
        - name: force
          required: false
          in: query
          description: >-
            Force customer create avoiding confit when document number already
            exists
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customers_CustomerRequest'
            example:
              name: Customer test
              email: jose2@gmail.com
              phoneNumber: 21 98889999099
              document:
                number: '97055503019'
                type: cpf
                country: BR
              address:
                country: BR
                state: Rio de Janeiro
                city: Rio de Janeiro
                district: Leblon
                zipCode: '25650011'
                street: Av Geraldo Cardoso
                streetNumber: '205'
                complement: Apto 203
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_CustomerResponse'
              example:
                id: 82aba896-9e37-45b6-aa90-d510c9050596
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                createdAt: 2012-06-30 23:59:59 +0000
                name: Customer test
                email: jose2@gmail.com
                document:
                  number: '97055503019'
                  type: cpf
                  country: BR
                phoneNumber: 21 98889999099
                address:
                  country: BR
                  state: Rio de Janeiro
                  city: Rio de Janeiro
                  district: Leblon
                  zipCode: '25650011'
                  street: Av Geraldo Cardoso
                  streetNumber: '205'
                  complement: Apto 203
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_ErrorResponse'
        '409':
          description: Conflict document number already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_ErrorResponse'
      tags:
        - Customers
      security:
        - Customers_X-Client-ID: []
    get:
      summary: List customers
      operationId: getCustomers
      parameters:
        - in: query
          name: page
          schema:
            type: string
          required: false
          description: page number
        - in: query
          name: limit
          schema:
            type: string
          required: false
          description: total itens per page
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - ASC
              - DESC
          required: false
          description: ordering of items
        - in: query
          name: id
          schema:
            type: string
          required: false
          description: customer identifier
        - in: query
          name: document.type
          schema:
            type: string
          required: false
          description: document type
        - in: query
          name: document.number
          schema:
            type: string
          required: false
          description: document number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_CustomerList'
              example:
                meta:
                  itemCount: 10
                  totalItems: 20
                  itemsPerPage: 10
                  totalPages: 5
                  currentPage: 2
                items:
                  - id: 82aba896-9e37-45b6-aa90-d510c9050596
                    clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                    createdAt: 2012-06-30 23:59:59 +0000
                    name: Customer test
                    email: jose2@gmail.com
                    phoneNumber: 21 98889999099
                    document:
                      number: '97055503019'
                      type: cpf
                      country: BR
                    address:
                      country: BR
                      state: Rio de Janeiro
                      city: Rio de Janeiro
                      district: Leblon
                      zipCode: '25650011'
                      street: Av Geraldo Cardoso
                      streetNumber: '205'
                      complement: Apto 203
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_ErrorResponse'
      tags:
        - Customers
      security:
        - Customers_X-Client-ID: []
  /v1/customers/{id}:
    get:
      summary: Get customer details
      operationId: getCustomerById
      parameters:
        - name: id
          required: true
          description: Customer ID
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_CustomerResponse'
              example:
                id: 82aba896-9e37-45b6-aa90-d510c9050596
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                createdAt: 2012-06-30 23:59:59 +0000
                name: Customer test
                email: jose2@gmail.com
                document:
                  number: '97055503019'
                  type: cpf
                  country: BR
                phoneNumber: 21 98889999099
                address:
                  country: BR
                  state: Rio de Janeiro
                  city: Rio de Janeiro
                  district: Leblon
                  zipCode: '25650011'
                  street: Av Geraldo Cardoso
                  streetNumber: '205'
                  complement: Apto 203
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_ErrorResponse'
      tags:
        - Customers
      security:
        - Customers_X-Client-ID: []
    delete:
      operationId: deleteCustomer
      summary: Delete customer
      parameters:
        - name: id
          required: true
          in: path
          description: Custome ID
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Customers
      security:
        - Customers_X-Client-ID: []
    patch:
      operationId: updateCustomer
      summary: Update customer
      parameters:
        - name: id
          required: true
          in: path
          description: Customer ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customers_UpdateCustomerRequest'
      responses:
        '200':
          description: The record has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_CustomerResponse'
              example:
                id: 82aba896-9e37-45b6-aa90-d510c9050596
                clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                createdAt: 2012-06-30 23:59:59 +0000
                name: Customer test
                email: jose2@gmail.com
                document:
                  number: '97055503019'
                  type: cpf
                  country: BR
                phoneNumber: 21 98889999099
                address:
                  country: BR
                  state: Rio de Janeiro
                  city: Rio de Janeiro
                  district: Leblon
                  zipCode: '25650011'
                  street: Av Geraldo Cardoso
                  streetNumber: '205'
                  complement: Apto 203
      tags:
        - Customers
      security:
        - Customers_X-Client-ID: []
  /v1/customers/{customer_id}/cards:
    post:
      operationId: linkCard
      summary: Add credit card to customers
      parameters:
        - name: customer_id
          required: true
          description: Customer ID
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customers_LinkCardRequest'
            example:
              cardId: 82aba896-9e37-45b6-aa90-d510c9050596
      responses:
        '204':
          description: The card has been linked successfully.
      tags:
        - Customers
      security:
        - Customers_X-Client-ID: []
    get:
      summary: List customer cards
      operationId: getCustomerCards
      parameters:
        - name: customer_id
          required: true
          in: path
          description: Customer ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers_CustomerCardList'
              example:
                meta:
                  itemCount: 10
                  totalItems: 20
                  itemsPerPage: 10
                  totalPages: 5
                  currentPage: 2
                items:
                  - id: 148d5db0-f1c3-439f-902d-f1f268086e1d
                    customerId: 82aba896-9e37-45b6-aa90-d510c9050596
                    clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
                    expirationMonth: '12'
                    expirationYear: '2026'
                    brand: Visa
                    cvvChecked: true
                    fingerprint: cbd4a441-c63c-4dee-ac6b-bfa7fa1df818
                    first6digits: '401959'
                    last4digits: '9339'
                    createdAt: 2012-06-30 23:59:59 +0000
                    status: active
      tags:
        - Customers
      security:
        - Customers_X-Client-ID: []
  /v1/sessions:
    post:
      summary: Create new session
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sessions_SessionRequest'
            example:
              amount: 100
              isActive: true
              capture: true
              merchantId: 1b0c6960-702a-4074-95c2-eed2790c16a1
              dueDate: '2022-10-25T09:28:45.000Z'
              description: Promoção Black Friday
              statementDescriptor: LOJA JOAO
              paymentMethods:
                - paymentType: pix
                  expiresIn: 30
              items:
                - name: Item 1
                  description: Item do carrinho
                  unitPrice: 1000
                  quantity: 1
                  tangible: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_SessionResponse'
              example:
                id: c1db83fa-723c-4e1f-9722-bc19d1be6791
                name: Pedido 1
                status: created
                isActive: true
                clientId: 39d2d314-5412-431a-b34b-74f9f0fbe7e1
                orderId: b84b7694-d22f-4083-bee7-c1274b16eb4a
                amount: 100
                currency: BRL
                capture: true
                merchantId: 9930c8d9-a7a8-4039-9faf-3715ad87baf8
                dueDate: '2022-10-26T19:32:08.000Z'
                description: Pedido Black Friday
                statementDescriptor: LOJA JOAO
                items:
                  - name: Item 1
                    description: Item do carrinho
                    unitPrice: 1000
                    quantity: 1
                    tangible: false
                paymentLink: https://link.malga.io/c1db83fa-723c-4e1f-9722-bc19d1be6791
                paymentMethods:
                  - paymentType: pix
                    expiresIn: 30
                createdAt: '2022-10-25T22:49:06.588Z'
                updatedAt: '2022-10-25T22:49:06.588Z'
                publicKey: 8be71cdf-01dc-4b1a-823a-4c58be6e4cf1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_ErrorResponse'
      tags:
        - Sessions
      security:
        - Sessions_X-Client-ID: []
  /v1/sessions/{id}:
    get:
      summary: Get session details
      operationId: getSessionById
      parameters:
        - name: id
          required: true
          description: Session ID
          in: path
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_SessionResponse'
              example:
                id: c1db83fa-723c-4e1f-9722-bc19d1be6791
                name: Pedido 1
                status: created
                isActive: true
                clientId: 39d2d314-5412-431a-b34b-74f9f0fbe7e1
                orderId: b84b7694-d22f-4083-bee7-c1274b16eb4a
                amount: 100
                currency: BRL
                capture: true
                merchantId: 9930c8d9-a7a8-4039-9faf-3715ad87baf8
                dueDate: '2022-10-26T19:32:08.000Z'
                description: Pedido Black Friday
                statementDescriptor: LOJA JOAO
                items:
                  - name: Item 1
                    description: Item do carrinho
                    unitPrice: 1000
                    quantity: 1
                    tangible: false
                paymentLink: https://link.malga.io/c1db83fa-723c-4e1f-9722-bc19d1be6791
                paymentMethods:
                  - paymentType: pix
                    expiresIn: 30
                createdAt: '2022-10-25T22:49:06.588Z'
                updatedAt: '2022-10-25T22:49:06.588Z'
                publicKey: 8be71cdf-01dc-4b1a-823a-4c58be6e4cf1
      tags:
        - Sessions
      security:
        - Sessions_X-Client-ID: []
    patch:
      summary: Update session status
      operationId: updateSession
      parameters:
        - name: id
          required: true
          description: Session ID
          in: path
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_SessionResponse'
              example:
                id: c1db83fa-723c-4e1f-9722-bc19d1be6791
                name: Pedido 1
                status: created
                isActive: true
                clientId: 39d2d314-5412-431a-b34b-74f9f0fbe7e1
                orderId: b84b7694-d22f-4083-bee7-c1274b16eb4a
                amount: 100
                currency: BRL
                capture: true
                merchantId: 9930c8d9-a7a8-4039-9faf-3715ad87baf8
                dueDate: '2022-10-26T19:32:08.000Z'
                description: Pedido Black Friday
                statementDescriptor: LOJA JOAO
                items:
                  - name: Item 1
                    description: Item do carrinho
                    unitPrice: 1000
                    quantity: 1
                    tangible: false
                paymentLink: https://link.malga.io/c1db83fa-723c-4e1f-9722-bc19d1be6791
                paymentMethods:
                  - paymentType: pix
                    expiresIn: 30
                createdAt: '2022-10-25T22:49:06.588Z'
                updatedAt: '2022-10-25T22:49:06.588Z'
                publicKey: 8be71cdf-01dc-4b1a-823a-4c58be6e4cf1
      tags:
        - Sessions
      security:
        - Sessions_X-Client-ID: []
  /v1/sessions/{id}/charge:
    post:
      summary: Pay session
      operationId: paySession
      parameters:
        - name: id
          required: true
          description: Session ID
          in: path
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sessions_SessionChargeRequest'
            examples:
              - $ref: '#/components/examples/Sessions_ChargeCardRequest'
              - $ref: '#/components/examples/Sessions_ChargePixRequest'
              - $ref: '#/components/examples/Sessions_ChargeBoletoRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_SessionChargeResponse'
              examples:
                - $ref: '#/components/examples/Sessions_SessionChargeCardResponse'
                - $ref: '#/components/examples/Sessions_SessionChargePixResponse'
                - $ref: '#/components/examples/Sessions_SessionChargeBoletoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_ErrorResponse'
      tags:
        - Sessions
      security:
        - Sessions_X-Client-ID: []
  /v1/sessions/{id}/cancel:
    post:
      summary: Cancel session
      operationId: cancelSession
      parameters:
        - name: id
          required: true
          description: Session ID
          in: path
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_CancelSessionResponse'
              example:
                id: c1db83fa-723c-4e1f-9722-bc19d1be6791
                status: canceled
      tags:
        - Sessions
      security:
        - Sessions_X-Client-ID: []
  /v1/sessions/{id}/history:
    get:
      summary: Recover session history
      operationId: getSessionHistory
      parameters:
        - name: id
          required: true
          description: Session ID
          in: path
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_SessionHistoryResponse'
      tags:
        - Sessions
      security:
        - Sessions_X-Client-ID: []
  /v1/sessions/{id}/link:
    get:
      summary: Recover session with company settings
      operationId: getSessionWithSettings
      parameters:
        - name: id
          required: true
          description: Session ID
          in: path
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions_SessionSettingsResponse'
      tags:
        - Sessions
      security:
        - Sessions_X-Client-ID: []
components:
  securitySchemes:
    ClientToken_X-Client-ID:
      type: apiKey
      in: header
      name: X-Client-Id
    ClientToken_X-Api-Key:
      type: apiKey
      in: header
      name: X-Api-Key
    Cards_X-Client-ID:
      type: apiKey
      in: header
      name: X-Client-Id
    Cards_X-Api-Key:
      type: apiKey
      in: header
      name: X-Api-Key
    Charges_X-Client-ID:
      type: apiKey
      in: header
      name: X-Client-Id
    Charges_X-Api-Key:
      type: apiKey
      in: header
      name: X-Api-Key
    Customers_X-Client-ID:
      type: apiKey
      in: header
      name: X-Client-Id
    Customers_X-Api-Key:
      type: apiKey
      in: header
      name: X-Api-Key
    Sessions_X-Client-ID:
      type: apiKey
      in: header
      name: X-Client-Id
    Sessions_X-Api-Key:
      type: apiKey
      in: header
      name: X-Api-Key
  schemas:
    ClientToken_AuthRequest:
      properties:
        scope:
          type: array
          description: determina o escopo de endpoints que a chave terá acesso
          items:
            type: string
            enum:
              - tokens
              - charges
              - cards
              - webhooks
        expires:
          type: integer
          description: >-
            prazo de validade da chave em segundos a partir da criação, zero
            para não expirar
          default: 0
    ClientToken_AuthResponse:
      properties:
        scope:
          type: array
          description: determina o escopo de endpoints que a chave terá acesso
          items:
            type: string
            enum:
              - tokens
              - charges
              - cards
              - webhooks
        expires:
          type: number
          description: >-
            prazo de validade da chave em segundos a partir da criação, zero
            para não expirar
        clientId:
          type: string
          description: identificador do cliente na Malga
        publicKey:
          type: string
          description: chave pública criada
        createdAt:
          type: string
          description: Data de criação da chave
    ClientToken_ErrorResponse:
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/ClientToken_ErrorItem'
    ClientToken_ErrorItem:
      properties:
        type:
          type: string
          enum:
            - api_error
            - bad_request
            - invalid_request_error
            - card_declined
            - conflict
        code:
          type: string
          description: Código de retorno da erro
        declinedCode:
          type: string
          description: Código de retorno da transação em caso de falha na autorização
        message:
          type: string
          description: Descrição breve do erro
        details:
          type: array
          description: Lista contendo objetos que detalham o erro de validação
      required:
        - type
    Cards_ErrorResponse:
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/Cards_ErrorItem'
    Cards_ErrorItem:
      properties:
        type:
          type: string
          enum:
            - api_error
            - bad_request
            - invalid_request_error
            - card_declined
            - conflict
        code:
          type: string
          description: Código de retorno da erro
        declinedCode:
          type: string
          description: Código de retorno da transação em caso de falha na autorização
        message:
          type: string
          description: Descrição breve do erro
        details:
          type: array
          description: Lista contendo objetos que detalham o erro de validação
      required:
        - type
    Cards_TokenRequest:
      required:
        - cardHolderName
        - cardNumber
        - cardCvv
        - cardExpirationDate
      properties:
        cardHolderName:
          type: string
          description: Nome do portador do cartão
        cardNumber:
          type: string
          description: Número do cartão (Sem espaços)
        cardCvv:
          type: string
          description: Código de verificação
        cardExpirationDate:
          type: string
          description: Mês e ano de validade no formato MM/YYYY
    Cards_MetaPagination:
      properties:
        itemCount:
          type: integer
          description: quantidade de itens na página
        totalItems:
          type: integer
          description: quantidade total de itens na consulta
        itemsPerPage:
          type: integer
          description: quantidade de itens por página
        totalPages:
          type: integer
          description: quantidade total de páginas
        currentPage:
          type: integer
          description: página atual
    Cards_CardRequest:
      required:
        - tokenId
      properties:
        tokenId:
          type: string
          description: Identificador do token gerado
        merchantId:
          type: string
          description: merchant identification used in card validation
        cvvCheck:
          type: boolean
          description: validate cvv using zero dollar authorization from provider
    Cards_CardList:
      properties:
        meta:
          type: object
          $ref: '#/components/schemas/Cards_Cards_MetaPagination'
        items:
          type: array
          $ref: '#/components/schemas/Cards_Cards_CardResponse'
    Cards_TokenResponse:
      properties:
        tokenId:
          type: string
          description: Token id
    Cards_CardResponse:
      properties:
        id:
          type: string
          description: ID do cartão
        expirationMonth:
          type: string
          description: Data de expiração MM
        expirationYear:
          type: string
          description: Data de expiração YYYY
        brand:
          type: string
          enum:
            - American Express
            - Mastercard
            - Visa
            - Elo
            - Discover
            - JCB
            - Diners
          description: Bandeira
        cvvChecked:
          type: boolean
          description: Identifica se o CVV foi verificado
        fingerprint:
          type: string
          description: Hash de identificação única do cartão com base nos dados sensíveis
        first6digits:
          type: string
          description: Primeiros 6 digitos do cartão
        last4digits:
          type: string
          description: Últimos 4 digitos do cartão
        status:
          type: string
          enum:
            - failed
            - active
            - pending
          description: >-
            Status de validação dos dados cartões, failed (cartão inválido para
            uso), active (cartão válido para uso), pending (validação do cartão
            pendente, uso autorizado temporariamente)
        createdAt:
          type: string
          description: Data de criação do cartão
        updatedAt:
          type: string
          description: Data de atualização do cartão
        customerId:
          type: string
          description: Customer vinculado ao cartão
    Charges_PaymentMethodCard:
      type: object
      properties:
        paymentType:
          type: string
          enum:
            - credit
            - debit
          description: Credit/Debit card charge method
        installments:
          type: integer
          description: Installments quantity for credit payments
      required:
        - paymentType
    Charges_PaymentMethodPix:
      properties:
        paymentType:
          type: string
          enum:
            - pix
          description: Pix charge, the source must be a valid customer
        expiresIn:
          type: integer
          description: Time in seconds that defines the validity of the charge
      required:
        - paymentType
        - expiresIn
    Charges_TransactionRequest:
      properties:
        id:
          type: string
          description: unique identification of request on the provider
        providerId:
          type: string
          description: provider identification related to your merchant id
        providerType:
          type: string
          description: provider code, see table of supported providers
        idempotencyKey:
          type: string
          description: >-
            unique identification automatically created by Malga for each
            request, used to assure idempotency and avoid duplicity, could be
            used to get transactions in the provider's API or dashboard.
        authorizationNsu:
          type: string
          description: authorization number retunred by provider
          deprecated: true
        transactionId:
          type: string
          description: >-
            unique identification of transaction on provider, could be used to
            get transaction in the provider's API.
        requestType:
          type: string
          enum:
            - pending
            - authorization
            - pre_authorization
            - void
            - capture
            - probe
            - charge_back
            - zero_dollar
            - anti_fraud
          description: type of request performed on provider
        requestStatus:
          type: string
          enum:
            - running
            - failed
            - success
            - timeout
            - internal_error
            - processing
          description: status of request processing
        amount:
          type: integer
          description: >-
            transaction request amount sent to provider, for partial
            capture/refund the amount could be different from original
            transaction amount
        responseTs:
          type: string
          description: total spent time in request processing
        providerError:
          type: object
          description: transaction requet error details
          properties:
            message:
              type: string
              description: error message mapped by Malga that describes declined reason
            declinedCode:
              type: string
              description: >-
                error code mapped by plyg based in the declined code returned by
                provider
            retryable:
              type: boolean
              description: declined code can be or not retried
            networkDeniedReason:
              type: string
              description: >-
                declined code returned as is from the provider, check in the
                provider's documentation
            networkDeniedMessage:
              type: string
              description: declined message returned as is from the provider
        providerAuthorization:
          type: object
          description: additional data returned by provider
          properties:
            networkAuthorizationCode:
              type: string
              description: authorization code as returned by provider
            networkResponseCode:
              type: string
              description: response code as returned by provider
        createdAt:
          type: string
          description: Created date of request
        updatedAt:
          type: string
          description: Updated date of request
    Charges_ChargeRequest:
      properties:
        merchantId:
          type: string
          description: >-
            merchant identification to be used in transaction and define the
            routing rule.
        amount:
          type: integer
          description: transaction amount in cents, example 100 to charge R$ 1.00
        currency:
          type: string
          description: >-
            currency code to be used in charge, ISO 4217 format (see table of
            types).
          default: BRL
        statementDescriptor:
          type: string
          description: description to be displayed on the buyer's bank statement
        capture:
          type: boolean
          description: whether the transaction should be captured automatically
        orderId:
          type: string
          description: >-
            Unique identification of order in your side to help future
            conciliation
        description:
          type: string
          description: Short description to help future conciliation
        customerId:
          type: string
          description: Customer identification to help future conciliation
        paymentMethod:
          description: Payment method to be used
          anyOf:
            - $ref: '#/components/schemas/Charges_PaymentMethodCard'
            - $ref: '#/components/schemas/Charges_PaymentMethodPix'
            - $ref: '#/components/schemas/Charges_PaymentMethodBoleto'
        paymentSource:
          anyOf:
            - $ref: '#/components/schemas/Charges_SourceTypeCard'
            - $ref: '#/components/schemas/Charges_SourceTypeCardOneShot'
            - $ref: '#/components/schemas/Charges_SourceTypeToken'
            - $ref: '#/components/schemas/Charges_SourceTypeCustomer'
            - $ref: '#/components/schemas/Charges_SourceTypeCustomerOneShot'
        fraudAnalysis:
          description: >-
            Additional parameters for fraud analysis, required by provider's
            anti-fraud
          allOf:
            - $ref: '#/components/schemas/Charges_FraudAnalysisRequest'
      required:
        - amount
        - merchantId
        - paymentMethod
        - paymentSource
    Charges_FraudAnalysisRequest:
      properties:
        customer:
          description: customer (payeer) data
          type: object
          properties:
            name:
              type: string
              description: customer name
            email:
              type: string
              description: customer email
            phone:
              type: string
              description: customer phone number
            identityType:
              type: string
              description: document type, see table of types
            identity:
              type: string
              description: document number
            registrationDate:
              type: string
              description: customer registration date
            deliveryAddress:
              description: Delivery customer address
              allOf:
                - $ref: '#/components/schemas/Charges_FraudAnalysisAddress'
            billingAddress:
              description: Billing customer address
              allOf:
                - $ref: '#/components/schemas/Charges_FraudAnalysisAddress'
            browser:
              description: information about customer browser
              allOf:
                - $ref: '#/components/schemas/Charges_FraudAnalysisCustomerBrowser'
        cart:
          description: Cart of products details
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: product name
                  quantity:
                    type: integer
                    description: itens of product purchased
                  sku:
                    type: string
                    description: unique product identification on store
                  unitPrice:
                    type: integer
                    description: unit price of product in cents
                  risk:
                    type: string
                    enum:
                      - high
                      - low
                    description: product risk of fraud
                  description:
                    type: string
                    description: product description
                  categoryId:
                    type: string
                    description: category which product belongs to
        device:
          description: Customer device details
          type: object
          properties:
            os:
              type: object
              properties:
                type:
                  type: string
                  description: Operational system type
                version:
                  type: string
                  description: Operational system version
            model:
              type: string
              description: Device model
            ramCapacity:
              type: integer
              description: Device ram capacity
            diskCapacity:
              type: integer
              description: Device disk capacity
            freeDiskSpace:
              type: integer
              description: Device disk space still free
            resolution:
              type: integer
              description: Device resolution
            vendors:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Vendor attribute name
                  value:
                    type: string
                    description: Vendor attribute value
            vendorAttributes:
              description: Device attributes by vendor
              type: object
              properties:
                flash:
                  type: boolean
                  description: Device has flash
                phoneCalls:
                  type: boolean
                  description: Device can make phone calls
                sendSms:
                  type: boolean
                  description: Device can send sms
                videoCamera:
                  type: boolean
                  description: Device has video camera
                cpuCount:
                  type: integer
                  description: Device cpu count
                simulator:
                  type: boolean
                  description: Device has simulator
                language:
                  type: string
                  description: Device language
                idiom:
                  type: string
                  description: Device idiom
                platform:
                  type: string
                  description: System platform
                name:
                  type: string
                  description: Device name
                family:
                  type: string
                  description: Device family
                retinaDisplay:
                  type: boolean
                  description: Device has retina display
                camera:
                  type: boolean
                  description: Device has camera
                model:
                  type: string
                  description: Device model
                frontCamera:
                  type: boolean
                  description: Device has front camera
    Charges_FraudAnalysisAddress:
      type: object
      properties:
        country:
          type: string
          description: formated in ISO 3166-1 alpha-2
        state:
          type: string
          description: address state
        city:
          type: string
          description: address city
        district:
          type: string
          description: address district or neighboor
        zipCode:
          type: string
          description: zip code
        street:
          type: string
          description: street address
        number:
          type: string
          description: street number address
        complement:
          type: string
          description: apartament number or address complement
    Charges_FraudAnalysisMetadata:
      type: object
      properties:
        customer:
          description: customer (payeer) data
          type: object
          properties:
            name:
              type: string
              description: customer name
            email:
              type: string
              description: customer email
            phone:
              type: string
              description: customer phone number
            identityType:
              type: string
              description: document type, see table of types
            identity:
              type: string
              description: document number
            registrationDate:
              type: string
              description: customer registration date
            deliveryAddress:
              description: Endereço de entrega
              allOf:
                - $ref: '#/components/schemas/Charges_FraudAnalysisAddress'
            billingAddress:
              description: Endereço de cobrança
              allOf:
                - $ref: '#/components/schemas/Charges_FraudAnalysisAddress'
        cart:
          description: Cart of products details
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: product name
                  quantity:
                    type: integer
                    description: itens of product purchased
                  sku:
                    type: string
                    description: unique product identification on store
                  unitPrice:
                    type: integer
                    description: unit price of product in cents
                  risk:
                    type: string
                    enum:
                      - high
                      - low
                    description: product risk of fraud
                  description:
                    type: string
                    description: product description
                  categoryId:
                    type: string
                    description: category which product belongs to
    Charges_FraudAnalysisCustomerBrowser:
      type: object
      properties:
        browserFingerprint:
          type: string
          description: fingerprint id generated by browser
        cookiesAccepted:
          type: boolean
          description: indicates if cookies has been accepeted
        email:
          type: string
          description: logged email address
        hostName:
          type: string
          description: user's computer hostname
        ipAddress:
          type: string
          description: user's ip address
        type:
          type: string
          description: browser's user-agent
    Charges_VoidRequest:
      properties:
        amount:
          type: integer
          description: >-
            the value to be refunded in cents cannot be greater than the
            transaction value, example 100 to charge R$ 1.00
        delayToCompose:
          type: integer
          description: >-
            number of days to compose the refunded value. It is only used in
            NuPay integrations.
    Charges_UpdateChargeStatusRequest:
      properties:
        status:
          type: string
          description: transaction status
          enum:
            - pending
            - pre_authorized
            - authorized
            - failed
            - canceled
            - voided
            - charged_back
            - created
            - processed
            - capture_pending
            - refund_pending
    Charges_CaptureRequest:
      properties:
        amount:
          type: integer
          description: >-
            the value to be captured in cents cannot be greater than the
            transaction value, example 100 to charge R$ 1.00
    Charges_SourceTypeCard:
      type: object
      description: identificação do merchant id a ser utilizado
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `card` para cobrança em cartão
            tokenizado
          example: card
        cardId:
          type: string
          description: Identificador do cartão quando source tipo card (opcional)
      required:
        - sourceType
        - cardId
    Charges_SourceTypeCardOneShot:
      type: object
      description: identificação do merchant id a ser utilizado
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `card` para cobrança em cartão
            tokenizado
          example: card
        card:
          type: object
          properties:
            cardHolderName:
              type: string
              description: Nome do portador do cartão
            cardNumber:
              type: string
              description: Número do cartão (Sem espaços)
            cardCvv:
              type: string
              description: Código de verificação
            cardExpirationDate:
              type: string
              description: Mês e ano de validade no formato MM/YYYY
      required:
        - sourceType
        - card
    Charges_SourceTypeToken:
      type: object
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `token` para cobrança no token
            gerado
          example: token
        tokenId:
          type: string
          description: Identificador do token quando source tipo token (opcional)
      required:
        - sourceType
        - tokenId
    Charges_Address:
      type: object
      properties:
        country:
          type: string
          description: Padrão ISO 3166-1 alpha-2
        state:
          type: string
          description: Estado
        city:
          type: string
          description: Cidade
        district:
          type: string
          description: Bairro
        zipCode:
          type: string
          description: Codigo postal CEP
        street:
          type: string
          description: Nome da rua/avenida/travessa
        streetNumber:
          type: string
          description: Numero da rua
        complement:
          type: string
          description: Complemento caso exista
    Charges_Document:
      type: object
      properties:
        type:
          type: string
          description: tipo de documento, consultar tabela de tipos suportados
        number:
          type: string
          description: numero do documento formato conforme tipo selecionado
        country:
          type: string
          description: >-
            pais de emissão do documento, Padrão ISO 3166-1 alpha-2, consultar
            tabela de tipos suportados
          default: BR
    Charges_SourceTypeCustomer:
      type: object
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `customer` para cobrança no cartão
            default do comprador
          example: customer
        customerId:
          type: string
          description: >-
            Identificador do cliente quando source tipo customer, debitando o
            cartão default do comprador
      required:
        - sourceType
        - customerId
    Charges_SourceTypeCustomerOneShot:
      type: object
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `customer` para cobrança no cartão
            default do comprador
          example: customer
        customer:
          type: object
          properties:
            name:
              type: string
              description: nome do usuario
            email:
              type: string
              description: email do usuario
            phoneNumber:
              type: string
              description: telefone de contato do usuario
            document:
              allOf:
                - $ref: '#/components/schemas/Charges_Document'
            address:
              allOf:
                - $ref: '#/components/schemas/Charges_Address'
          required:
            - name
            - phoneNumber
            - email
            - document
      required:
        - sourceType
        - customer
    Charges_PaymentMethodBoleto:
      properties:
        paymentType:
          type: string
          enum:
            - boleto
          description: Boleto charge, the source must be a valid customer.
        expiresDate:
          type: string
          description: Boleto due date, ISO-Date, ex 2017-01-31
        instructions:
          type: string
          description: >-
            Boleto instructions field. Maximum 255 characters. Use \n for line
            break
        interest:
          type: object
          description: Optional informations of the fees for delay payment
          properties:
            days:
              type: integer
              description: >-
                Days after the expiration of the boleto when interest must be
                charged
            amount:
              type: integer
              description: >-
                Amount in cents of the interest rate that will be charged peer
                day
            percentage:
              type: number
              description: >-
                Amount in percentage of the interest rate that will be charged
                peer month
        fine:
          type: object
          description: Optional information of the fine condition for delay payment
          properties:
            days:
              type: integer
              description: Days after the boleto expiration when the fine must be charged
            amount:
              type: integer
              description: Fine amount in cents
            percentage:
              type: number
              description: Fine amount in percentage
      required:
        - paymentType
    Charges_PaymentMethodPixResponse:
      properties:
        paymentType:
          type: string
          enum:
            - pix
          description: método da cobrança via PIX, o source deve ser um customer válido.
        expiresIn:
          type: integer
          description: tempo em segundos que define a validade da cobrança.
        qrCodeData:
          type: string
          description: >-
            código copia e cola para o QR code dinâmico gerado, pronto para ser
            pago.
        qrCodeImageUrl:
          type: string
          description: >-
            link para download da imagem do QR code dinâmico gerado, pronto para
            ser scaneado e pago.
      required:
        - paymentType
        - expiresIn
        - qrCodeData
        - qrCodeImageUrl
    Charges_PaymentMethodBoletoResponse:
      properties:
        paymentType:
          type: string
          enum:
            - boleto
          description: método da cobrança via Boleto, o source deve ser um customer válido
        expiresDate:
          type: string
          description: data de vencimento do boleto em ISO-Date, ex 2017-01-31
        barcodeData:
          type: string
          description: >-
            código copia e cola do boleto registrado gerado, pronto para
            pagamento;
        barcodeImageUrl:
          type: string
          description: >-
            link para download do do boleto registrado gerado, pronto para
            pagamento;
      required:
        - paymentType
        - expiresDate
        - barcodeData
        - barcodeImageUrl
    Charges_ErrorResponse:
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/Charges_ErrorItem'
    Charges_ErrorItem:
      properties:
        type:
          type: string
          enum:
            - api_error
            - bad_request
            - invalid_request_error
            - card_declined
            - conflict
        code:
          type: string
          description: Código de retorno da erro
        declinedCode:
          type: string
          description: Código de retorno da transação em caso de falha na autorização
        message:
          type: string
          description: Descrição breve do erro
        details:
          type: array
          description: Lista contendo objetos que detalham o erro de validação
      required:
        - type
    Charges_ChargeResponse:
      properties:
        id:
          type: string
          description: Charge ID
        clientId:
          type: string
          description: client identification on Malga
        merchantId:
          type: string
          description: merchant identification used in charge
        customerId:
          type: string
          description: customer identification
        description:
          type: string
          description: short description
        amount:
          type: integer
          description: transaction amount in cents, example 100 to charge R$ 1.00
        originalAmount:
          type: integer
          description: transaction orignal amount in cents, example 100 to charge R$ 1.00
        currency:
          type: string
          description: >-
            currency code to be used in charge, ISO 4217 format (see table of
            types).
          default: BRL
        statementDescriptor:
          type: string
          description: description to be displayed on the buyer's bank statement
        capture:
          type: boolean
          description: whether the transaction should be captured automatically
        status:
          type: string
          description: charge status on Malga
          enum:
            - pending
            - pre_authorized
            - authorized
            - failed
            - canceled
            - voided
            - refund_pending
            - charged_back
        orderId:
          type: string
          description: >-
            Unique identification of order in your side to help future
            conciliation
        paymentMethod:
          anyOf:
            - $ref: '#/components/schemas/Charges_PaymentMethodCard'
            - $ref: '#/components/schemas/Charges_PaymentMethodPixResponse'
            - $ref: '#/components/schemas/Charges_PaymentMethodBoletoResponse'
        paymentSource:
          anyOf:
            - $ref: '#/components/schemas/Charges_SourceTypeCard'
            - $ref: '#/components/schemas/Charges_SourceTypeCardOneShot'
            - $ref: '#/components/schemas/Charges_SourceTypeToken'
            - $ref: '#/components/schemas/Charges_SourceTypeCustomer'
            - $ref: '#/components/schemas/Charges_SourceTypeCustomerOneShot'
        createdAt:
          type: string
          description: Created date
        updatedAt:
          type: string
          description: Updated date
        fraudAnalysisMetadata:
          description: Additional parameters for fraud analysis
          allOf:
            - $ref: '#/components/schemas/Charges_FraudAnalysisMetadata'
        transactionRequests:
          type: array
          items:
            $ref: '#/components/schemas/Charges_TransactionRequest'
    Charges_ChargeList:
      properties:
        meta:
          type: object
          $ref: '#/components/schemas/Charges_Charges_MetaPagination'
        items:
          type: array
          $ref: '#/components/schemas/Charges_Charges_ChargeResponse'
    Charges_MetaPagination:
      properties:
        itemCount:
          type: integer
          description: quantidade de itens na página
        totalItems:
          type: integer
          description: quantidade total de itens na consulta
        itemsPerPage:
          type: integer
          description: quantidade de itens por página
        totalPages:
          type: integer
          description: quantidade total de páginas
        currentPage:
          type: integer
          description: página atual
    Customers_Address:
      type: object
      properties:
        country:
          type: string
          description: Padrão ISO 3166-1 alpha-2
        state:
          type: string
          description: Estado
        city:
          type: string
          description: Cidade
        district:
          type: string
          description: Bairro
        zipCode:
          type: string
          description: Codigo postal CEP
        street:
          type: string
          description: Nome da rua/avenida/travessa
        streetNumber:
          type: string
          description: Numero da rua
        complement:
          type: string
          description: Complemento caso exista
    Customers_Document:
      type: object
      properties:
        type:
          type: string
          description: tipo de documento, consultar tabela de tipos suportados
        number:
          type: string
          description: numero do documento formato conforme tipo selecionado
        country:
          type: string
          description: >-
            pais de emissão do documento, Padrão ISO 3166-1 alpha-2, consultar
            tabela de tipos suportados
          default: BR
    Customers_CustomerRequest:
      type: object
      properties:
        name:
          type: string
          description: nome do usuario
        email:
          type: string
          description: email do usuario
        phoneNumber:
          type: string
          description: telefone de contato do usuario
        document:
          allOf:
            - $ref: '#/components/schemas/Customers_Document'
        address:
          allOf:
            - $ref: '#/components/schemas/Customers_Address'
      required:
        - name
        - phoneNumber
        - email
        - document
    Customers_CustomerResponse:
      type: object
      properties:
        id:
          type: string
          description: identificador do customer
        createdAt:
          type: string
          description: data de criação
        clientId:
          type: string
          description: identificador do client
        name:
          type: string
          description: nome do usuario
        email:
          type: string
          description: email do usuario
        phoneNumber:
          type: string
          description: telefones de contato do usuario
        document:
          allOf:
            - $ref: '#/components/schemas/Customers_Document'
        address:
          allOf:
            - $ref: '#/components/schemas/Customers_Address'
    Customers_CustomerList:
      properties:
        meta:
          type: object
          $ref: '#/components/schemas/Customers_Customers_MetaPagination'
        items:
          type: array
          $ref: '#/components/schemas/Customers_Customers_CustomerResponse'
    Customers_UpdateCustomerRequest:
      type: object
      properties:
        name:
          type: string
          description: nome do usuario
        phoneNumber:
          type: string
          description: telefone de contato do usuario
        address:
          allOf:
            - $ref: '#/components/schemas/Customers_Address'
    Customers_LinkCardRequest:
      required:
        - cardId
      properties:
        cardId:
          type: string
          description: Identificador do cartão a ser associado
    Customers_CustomerCardList:
      properties:
        meta:
          type: object
          $ref: '#/components/schemas/Customers_Customers_MetaPagination'
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID do cartão
              expirationMonth:
                type: string
                description: Data de expiração MM
              expirationYear:
                type: string
                description: Data de expiração YYYY
              brand:
                type: string
                enum:
                  - American Express
                  - Mastercard
                  - Visa
                  - Elo
                  - Discover
                  - JCB
                  - Diners
                description: Bandeira
              cvvChecked:
                type: boolean
                description: Identifica se o CVV foi verificado
              fingerprint:
                type: string
                description: >-
                  Hash de identificação única do cartão com base nos dados
                  sensíveis
              first6digits:
                type: string
                description: Primeiros 6 digitos do cartão
              last4digits:
                type: string
                description: Últimos 4 digitos do cartão
              status:
                type: string
                enum:
                  - failed
                  - active
                  - pending
                description: >-
                  Status de validação dos dados cartões, failed (cartão inválido
                  para uso), active (cartão válido para uso), pending (validação
                  do cartão pendente, uso autorizado temporariamente)
              createdAt:
                type: string
                description: Data de criação do cartão
              updatedAt:
                type: string
                description: Data de atualização do cartão
              customerId:
                type: string
                description: Customer vinculado ao cartão
    Customers_MetaPagination:
      properties:
        itemCount:
          type: integer
          description: quantidade de itens na página
        totalItems:
          type: integer
          description: quantidade total de itens na consulta
        itemsPerPage:
          type: integer
          description: quantidade de itens por página
        totalPages:
          type: integer
          description: quantidade total de páginas
        currentPage:
          type: integer
          description: página atual
    Customers_ErrorResponse:
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/Customers_ErrorItem'
    Customers_ErrorItem:
      properties:
        type:
          type: string
          enum:
            - api_error
            - bad_request
            - invalid_request_error
            - card_declined
        declinedCode:
          type: string
          description: Código de retorno da transação em caso de falha na autorização
        message:
          type: string
          description: Descrição breve do erro
        details:
          type: array
          description: Lista contendo objetos que detalham o erro de validação
      required:
        - type
    Sessions_ErrorResponse:
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/Sessions_ErrorItem'
    Sessions_ErrorItem:
      properties:
        type:
          type: string
          enum:
            - api_error
            - bad_request
            - invalid_request_error
            - card_declined
            - conflict
        code:
          type: string
          description: Código de retorno da erro
        declinedCode:
          type: string
          description: Código de retorno da transação em caso de falha na autorização
        message:
          type: string
          description: Descrição breve do erro
        details:
          type: array
          description: Lista contendo objetos que detalham o erro de validação
      required:
        - type
    Sessions_PaymentMethodCard:
      type: object
      properties:
        paymentType:
          type: string
          enum:
            - credit
            - debit
          description: Credit/Debit card charge method
        installments:
          type: integer
          description: Installments quantity for credit payments
      required:
        - paymentType
    Sessions_PaymentMethodPix:
      properties:
        paymentType:
          type: string
          enum:
            - pix
          description: Pix charge, the source must be a valid customer
        expiresIn:
          type: integer
          description: Time in seconds that defines the validity of the charge
      required:
        - paymentType
        - expiresIn
    Sessions_PaymentMethodBoleto:
      properties:
        paymentType:
          type: string
          enum:
            - boleto
          description: Boleto charge, the source must be a valid customer.
        expiresDate:
          type: string
          description: Boleto due date, ISO-Date, ex 2017-01-31
        instructions:
          type: string
          description: >-
            Boleto instructions field. Maximum 255 characters. Use \n for line
            break
        interest:
          type: object
          description: Optional informations of the fees for delay payment
          properties:
            days:
              type: integer
              description: >-
                Days after the expiration of the boleto when interest must be
                charged
            amount:
              type: integer
              description: >-
                Amount in cents of the interest rate that will be charged peer
                day
            percentage:
              type: number
              description: >-
                Amount in percentage of the interest rate that will be charged
                peer month
        fine:
          type: object
          description: Optional information of the fine condition for delay payment
          properties:
            days:
              type: integer
              description: Days after the boleto expiration when the fine must be charged
            amount:
              type: integer
              description: Fine amount in cents
            percentage:
              type: number
              description: Fine amount in percentage
      required:
        - paymentType
    Sessions_UpdateSessionResponse:
      properties:
        id:
          type: string
          description: Session ID
        isActive:
          type: boolean
          description: Whether the session is active
    Sessions_CancelSessionResponse:
      properties:
        id:
          type: string
          description: Session ID
        status:
          type: string
          enum:
            - created
            - paid
            - canceled
            - voided
          description: Session status
    Sessions_SessionRequest:
      properties:
        orderId:
          type: string
          description: >-
            Unique identification of order in your side to help future
            conciliation
        amount:
          type: integer
          description: Transaction amount in cents, example 100 to charge R$ 1.00
        currency:
          type: string
          default: BRL
          description: >-
            Currency code to be used in charge, ISO 4217 format (see table of
            types)
        isActive:
          type: boolean
          description: Whether the session is active
        capture:
          type: boolean
          description: Whether the transaction should be captured automatically
        merchantId:
          type: string
          description: Merchant identification used in charge
        dueDate:
          type: string
          description: Session expiration date
        name:
          type: string
          description: Session name
        description:
          type: string
          description: Session description
        statementDescriptor:
          type: string
          description: Description to be displayed on the buyer's bank statement
        createLink:
          type: boolean
          description: Whether the session has a Payment Link
        paymentMethods:
          description: Payment methods available on this session
          anyOf:
            - $ref: '#/components/schemas/Sessions_PaymentMethodCard'
            - $ref: '#/components/schemas/Sessions_PaymentMethodPix'
            - $ref: '#/components/schemas/Sessions_PaymentMethodBoleto'
        items:
          type: array
          description: Order items
          items:
            $ref: '#/components/schemas/Sessions_SessionItemObject'
      required:
        - amount
        - name
        - merchantId
        - dueDate
        - paymentMethods
        - items
    Sessions_SessionResponse:
      properties:
        id:
          type: string
          description: Session ID
        name:
          type: string
          description: Session name
        status:
          type: string
          enum:
            - created
            - paid
            - canceled
            - voided
          description: Session status
        isActive:
          type: boolean
          description: Whether the session is active
        clientId:
          type: string
          description: Client identification on Malga
        orderId:
          type: string
          description: >-
            Unique identification of order in your side to help future
            conciliation
        amount:
          type: integer
          description: Transaction amount in cents, example 100 to charge R$ 1.00
        currency:
          type: string
          description: >-
            Currency code to be used in charge, ISO 4217 format (see table of
            types)
        capture:
          type: boolean
          description: Whether the transaction should be captured automatically
        merchantId:
          type: string
          description: Merchant identification used in charge
        dueDate:
          type: string
          description: Session expiration date
        description:
          type: string
          description: Session description
        statementDescriptor:
          type: string
          description: Description to be displayed on the buyer's bank statement
        items:
          type: array
          description: Order items
          items:
            $ref: '#/components/schemas/Sessions_SessionItemObject'
        paymentLink:
          type: string
          description: Link to access Payment Link of this session
        paymentMethods:
          type: array
          description: Payment methods available on this session
          anyOf:
            - $ref: '#/components/schemas/Sessions_PaymentMethodCard'
            - $ref: '#/components/schemas/Sessions_PaymentMethodPixResponse'
            - $ref: '#/components/schemas/Sessions_PaymentMethodBoletoResponse'
        createdAt:
          type: string
          description: Created date
        updatedAt:
          type: string
          description: Updated date
        publicKey:
          type: string
          description: Access key with limited scope, must be used to pay the session
    Sessions_PaymentMethodPixResponse:
      properties:
        paymentType:
          type: string
          enum:
            - pix
          description: método da cobrança via PIX, o source deve ser um customer válido.
        expiresIn:
          type: integer
          description: tempo em segundos que define a validade da cobrança.
        qrCodeData:
          type: string
          description: >-
            código copia e cola para o QR code dinâmico gerado, pronto para ser
            pago.
        qrCodeImageUrl:
          type: string
          description: >-
            link para download da imagem do QR code dinâmico gerado, pronto para
            ser scaneado e pago.
      required:
        - paymentType
        - expiresIn
        - qrCodeData
        - qrCodeImageUrl
    Sessions_PaymentMethodBoletoResponse:
      properties:
        paymentType:
          type: string
          enum:
            - boleto
          description: método da cobrança via Boleto, o source deve ser um customer válido
        expiresDate:
          type: string
          description: data de vencimento do boleto em ISO-Date, ex 2017-01-31
        barcodeData:
          type: string
          description: >-
            código copia e cola do boleto registrado gerado, pronto para
            pagamento;
        barcodeImageUrl:
          type: string
          description: >-
            link para download do do boleto registrado gerado, pronto para
            pagamento;
      required:
        - paymentType
        - expiresDate
        - barcodeData
        - barcodeImageUrl
    Sessions_SourceTypeCard:
      type: object
      description: identificação do merchant id a ser utilizado
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `card` para cobrança em cartão
            tokenizado
          example: card
        cardId:
          type: string
          description: Identificador do cartão quando source tipo card (opcional)
      required:
        - sourceType
        - cardId
    Sessions_SourceTypeCardOneShot:
      type: object
      description: identificação do merchant id a ser utilizado
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `card` para cobrança em cartão
            tokenizado
          example: card
        card:
          type: object
          properties:
            cardHolderName:
              type: string
              description: Nome do portador do cartão
            cardNumber:
              type: string
              description: Número do cartão (Sem espaços)
            cardCvv:
              type: string
              description: Código de verificação
            cardExpirationDate:
              type: string
              description: Mês e ano de validade no formato MM/YYYY
      required:
        - sourceType
        - card
    Sessions_SourceTypeToken:
      type: object
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `token` para cobrança no token
            gerado
          example: token
        tokenId:
          type: string
          description: Identificador do token quando source tipo token (opcional)
      required:
        - sourceType
        - tokenId
    Sessions_SourceTypeCustomer:
      type: object
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `customer` para cobrança no cartão
            default do comprador
          example: customer
        customerId:
          type: string
          description: >-
            Identificador do cliente quando source tipo customer, debitando o
            cartão default do comprador
      required:
        - sourceType
        - customerId
    Sessions_SourceTypeCustomerOneShot:
      type: object
      properties:
        sourceType:
          type: string
          description: >-
            tipo da origem da cobrança, usar `customer` para cobrança no cartão
            default do comprador
          example: customer
        customer:
          type: object
          properties:
            name:
              type: string
              description: nome do usuario
            email:
              type: string
              description: email do usuario
            phoneNumber:
              type: string
              description: telefone de contato do usuario
            document:
              allOf:
                - $ref: '#/components/schemas/Sessions_Document'
            address:
              allOf:
                - $ref: '#/components/schemas/Sessions_Address'
          required:
            - name
            - phoneNumber
            - email
            - document
      required:
        - sourceType
        - customer
    Sessions_Address:
      type: object
      properties:
        country:
          type: string
          description: Padrão ISO 3166-1 alpha-2
        state:
          type: string
          description: Estado
        city:
          type: string
          description: Cidade
        district:
          type: string
          description: Bairro
        zipCode:
          type: string
          description: Codigo postal CEP
        street:
          type: string
          description: Nome da rua/avenida/travessa
        streetNumber:
          type: string
          description: Numero da rua
        complement:
          type: string
          description: Complemento caso exista
    Sessions_Document:
      type: object
      properties:
        type:
          type: string
          description: tipo de documento, consultar tabela de tipos suportados
        number:
          type: string
          description: numero do documento formato conforme tipo selecionado
        country:
          type: string
          description: >-
            pais de emissão do documento, Padrão ISO 3166-1 alpha-2, consultar
            tabela de tipos suportados
          default: BR
    Sessions_SessionItemObject:
      properties:
        name:
          type: string
          description: Session item name
        description:
          type: string
          description: Session item description
        unitPrice:
          type: number
          description: Item unit amount in cents, example 100 to charge R$ 1.00
        quantity:
          type: number
          description: Item quantity
        tangible:
          type: boolean
          description: Whether the item is tangible
    Sessions_SessionHistoryResponse:
      type: array
      items:
        $ref: '#/components/schemas/Sessions_SessionHistoryItem'
    Sessions_SessionHistoryItem:
      type: object
      properties:
        status:
          type: string
          enum:
            - created
            - paid
            - canceled
            - voided
          description: Status da sessão
        id:
          type: string
          description: Session ID
        createdAt:
          type: string
          description: Created date
        updatedAt:
          type: string
          description: Updated date
    Sessions_SessionSettingsResponse:
      properties:
        id:
          type: string
          description: Session ID
        name:
          type: string
          description: Session name
        status:
          type: string
          enum:
            - created
            - paid
            - canceled
            - voided
          description: Session status
        isActive:
          type: boolean
          description: Whether the session is active
        clientId:
          type: string
          description: Client identification on Malga
        orderId:
          type: string
          description: >-
            Unique identification of order in your side to help future
            conciliation
        amount:
          type: integer
          description: Transaction amount in cents, example 100 to charge R$ 1.00
        currency:
          type: string
          description: >-
            Currency code to be used in charge, ISO 4217 format (see table of
            types)
        capture:
          type: boolean
          description: Whether the transaction should be captured automatically
        merchantId:
          type: string
          description: Merchant identification used in charge
        dueDate:
          type: string
          description: Session expiration date
        description:
          type: string
          description: Session description
        statementDescriptor:
          type: string
          description: Description to be displayed on the buyer's bank statement
        items:
          type: array
          description: Order items
          items:
            $ref: '#/components/schemas/Sessions_SessionItemObject'
        paymentLink:
          type: string
          description: Link to access Payment Link of this session
        paymentMethods:
          type: array
          description: Payment methods available on this session
          anyOf:
            - $ref: '#/components/schemas/Sessions_PaymentMethodCard'
            - $ref: '#/components/schemas/Sessions_PaymentMethodPixResponse'
            - $ref: '#/components/schemas/Sessions_PaymentMethodBoletoResponse'
        createdAt:
          type: string
          description: Created date
        updatedAt:
          type: string
          description: Updated date
        publicKey:
          type: string
          description: Access key with limited scope, must be used to pay the session
        settings:
          type: object
          description: Company settings
          $ref: '#/components/schemas/Sessions_UserSettings'
    Sessions_UserSettings:
      properties:
        id:
          type: string
          format: uuid
          description: Company settings ID
        email:
          type: string
          format: email
          description: Company e-mail
        phone:
          type: string
          format: phone
          description: Company phone
        statementDescription:
          type: string
          description: Description to be displayed on buyer's invoice
        logo:
          type: string
          format: uri
          description: Company logo URL
        mainColor:
          type: string
          description: Main color
        secondaryColor:
          type: string
          description: Secondary color
        attentionColor:
          type: string
          description: Attention color
        errorColor:
          type: string
          description: Error message color
        successColor:
          type: string
          description: Success message color
        backgroundColor:
          type: string
          description: Background color
        companyName:
          type: string
          description: Company name
        clientId:
          type: string
          description: Client identification on Malga
        documentNumber:
          type: string
          description: Document number registered on company account
        language:
          type: string
          description: Default company language
    Sessions_SessionChargeRequest:
      properties:
        customerId:
          type: string
          format: uuid
          description: Customer identification
        paymentMethod:
          description: Payment method to be used
          oneOf:
            - $ref: '#/components/schemas/Sessions_PaymentMethodCard'
            - $ref: '#/components/schemas/Sessions_PaymentMethodPix'
            - $ref: '#/components/schemas/Sessions_PaymentMethodBoleto'
        paymentSource:
          oneOf:
            - $ref: '#/components/schemas/Sessions_SourceTypeCard'
            - $ref: '#/components/schemas/Sessions_SourceTypeCardOneShot'
            - $ref: '#/components/schemas/Sessions_SourceTypeToken'
            - $ref: '#/components/schemas/Sessions_SourceTypeCustomer'
            - $ref: '#/components/schemas/Sessions_SourceTypeCustomerOneShot'
        fraudAnalysis:
          description: >-
            Additional parameters for fraud analysis, required by provider's
            anti-fraud
          allOf:
            - $ref: '#/components/schemas/Sessions_FraudAnalysisRequest'
        splitRules:
          description: Additional parameters for transacting with Split
          allOf:
            - $ref: '#/components/schemas/Sessions_SplitRules'
      required:
        - paymentMethod
        - paymentSource
    Sessions_SplitRulesFaresSchema:
      type: object
      properties:
        mdr:
          type: number
          description: >-
            Indicates the percentage to be deducted from the value of a
            transaction, defined by product (credit/debit/ticket), brand and
            installment range
        fee:
          type: number
          description: >-
            Indicates amount in cents to be charged per captured transaction. It
            is deducted at the time of “setting up” the financial agenda
    Sessions_SplitRules:
      type: array
      items:
        type: object
        properties:
          sellerId:
            type: string
            format: uuid
            description: seller id
          percentage:
            type: number
            description: >-
              percentage of the transaction amount that will be sent to the
              receiver
          amount:
            type: number
            description: amount that will be sent to the receiver
          processingFee:
            type: boolean
            description: >-
              indicates whether the recipient linked to the rule will be charged
              transaction fees
          liable:
            type: boolean
            description: >-
              indicates whether the linked recipient will assume the chargeback
              risks of the transaction
          fares:
            $ref: '#/components/schemas/Sessions_Sessions_SplitRulesFaresSchema'
            description: >-
              Informações sobre as taxas que serão cobradas do recebedor -
              Apenas para sellers com provedor Braspag
    Sessions_SessionChargeResponse:
      properties:
        id:
          type: string
          description: ChargeResponse ID
        clientId:
          type: string
          format: uuid
          description: Client identification on Malga
        merchantId:
          type: string
          format: uuid
          description: Merchant identification used in charge
        description:
          type: string
          description: Short description
        orderId:
          type: string
          description: >-
            Unique identification of order in your side to help future
            conciliation
        createdAt:
          type: string
          description: Created date
        amount:
          type: number
          description: Transaction amount in cents, example 100 to charge R$ 1.00
        originalAmount:
          type: number
          description: Transaction original amount in cents, example 100 to charge R$ 1.00
        currency:
          type: string
          description: >-
            Currency code to be used in charge, ISO 4217 format (see table of
            types)
          default: BRL
        statementDescriptor:
          type: string
          description: Description to be displayed on the buyer's bank statement
        status:
          type: string
          enum:
            - created
            - paid
            - canceled
            - voided
          description: Session status
        paymentMethod:
          oneOf:
            - $ref: '#/components/schemas/Sessions_PaymentMethodCard'
            - $ref: '#/components/schemas/Sessions_PaymentMethodPixResponse'
            - $ref: '#/components/schemas/Sessions_PaymentMethodBoletoResponse'
        paymentSource:
          anyOf:
            - $ref: '#/components/schemas/Sessions_SourceTypeCard'
            - $ref: '#/components/schemas/Sessions_SourceTypeCardOneShot'
            - $ref: '#/components/schemas/Sessions_SourceTypeToken'
            - $ref: '#/components/schemas/Sessions_SourceTypeCustomer'
            - $ref: '#/components/schemas/Sessions_SourceTypeCustomerOneShot'
        transactionRequests:
          type: array
          items:
            $ref: '#/components/schemas/Sessions_TransactionRequest'
    Sessions_TransactionRequest:
      properties:
        id:
          type: string
          description: unique identification of request on the provider
        providerId:
          type: string
          description: provider identification related to your merchant id
        providerType:
          type: string
          description: provider code, see table of supported providers
        idempotencyKey:
          type: string
          description: >-
            unique identification automatically created by Malga for each
            request, used to assure idempotency and avoid duplicity, could be
            used to get transactions in the provider's API or dashboard.
        authorizationNsu:
          type: string
          description: authorization number retunred by provider
          deprecated: true
        transactionId:
          type: string
          description: >-
            unique identification of transaction on provider, could be used to
            get transaction in the provider's API.
        requestType:
          type: string
          enum:
            - pending
            - authorization
            - pre_authorization
            - void
            - capture
            - probe
            - charge_back
            - zero_dollar
            - anti_fraud
          description: type of request performed on provider
        requestStatus:
          type: string
          enum:
            - running
            - failed
            - success
            - timeout
            - internal_error
            - processing
          description: status of request processing
        amount:
          type: integer
          description: >-
            transaction request amount sent to provider, for partial
            capture/refund the amount could be different from original
            transaction amount
        responseTs:
          type: string
          description: total spent time in request processing
        providerError:
          type: object
          description: transaction requet error details
          properties:
            message:
              type: string
              description: error message mapped by Malga that describes declined reason
            declinedCode:
              type: string
              description: >-
                error code mapped by plyg based in the declined code returned by
                provider
            retryable:
              type: boolean
              description: declined code can be or not retried
            networkDeniedReason:
              type: string
              description: >-
                declined code returned as is from the provider, check in the
                provider's documentation
            networkDeniedMessage:
              type: string
              description: declined message returned as is from the provider
        providerAuthorization:
          type: object
          description: additional data returned by provider
          properties:
            networkAuthorizationCode:
              type: string
              description: authorization code as returned by provider
            networkResponseCode:
              type: string
              description: response code as returned by provider
        createdAt:
          type: string
          description: Created date of request
        updatedAt:
          type: string
          description: Updated date of request
    Sessions_FraudAnalysisRequest:
      properties:
        customer:
          description: customer (payeer) data
          type: object
          properties:
            name:
              type: string
              description: customer name
            email:
              type: string
              description: customer email
            phone:
              type: string
              description: customer phone number
            identityType:
              type: string
              description: document type, see table of types
            identity:
              type: string
              description: document number
            registrationDate:
              type: string
              description: customer registration date
            deliveryAddress:
              description: Delivery customer address
              allOf:
                - $ref: '#/components/schemas/Sessions_FraudAnalysisAddress'
            billingAddress:
              description: Billing customer address
              allOf:
                - $ref: '#/components/schemas/Sessions_FraudAnalysisAddress'
            browser:
              description: information about customer browser
              allOf:
                - $ref: '#/components/schemas/Sessions_FraudAnalysisCustomerBrowser'
        cart:
          description: Cart of products details
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: product name
                  quantity:
                    type: integer
                    description: itens of product purchased
                  sku:
                    type: string
                    description: unique product identification on store
                  unitPrice:
                    type: integer
                    description: unit price of product in cents
                  risk:
                    type: string
                    enum:
                      - high
                      - low
                    description: product risk of fraud
                  description:
                    type: string
                    description: product description
                  categoryId:
                    type: string
                    description: category which product belongs to
        device:
          description: Customer device details
          type: object
          properties:
            os:
              type: object
              properties:
                type:
                  type: string
                  description: Operational system type
                version:
                  type: string
                  description: Operational system version
            model:
              type: string
              description: Device model
            ramCapacity:
              type: integer
              description: Device ram capacity
            diskCapacity:
              type: integer
              description: Device disk capacity
            freeDiskSpace:
              type: integer
              description: Device disk space still free
            resolution:
              type: integer
              description: Device resolution
            vendors:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Vendor attribute name
                  value:
                    type: string
                    description: Vendor attribute value
            vendorAttributes:
              description: Device attributes by vendor
              type: object
              properties:
                flash:
                  type: boolean
                  description: Device has flash
                phoneCalls:
                  type: boolean
                  description: Device can make phone calls
                sendSms:
                  type: boolean
                  description: Device can send sms
                videoCamera:
                  type: boolean
                  description: Device has video camera
                cpuCount:
                  type: integer
                  description: Device cpu count
                simulator:
                  type: boolean
                  description: Device has simulator
                language:
                  type: string
                  description: Device language
                idiom:
                  type: string
                  description: Device idiom
                platform:
                  type: string
                  description: System platform
                name:
                  type: string
                  description: Device name
                family:
                  type: string
                  description: Device family
                retinaDisplay:
                  type: boolean
                  description: Device has retina display
                camera:
                  type: boolean
                  description: Device has camera
                model:
                  type: string
                  description: Device model
                frontCamera:
                  type: boolean
                  description: Device has front camera
    Sessions_FraudAnalysisAddress:
      type: object
      properties:
        country:
          type: string
          description: formated in ISO 3166-1 alpha-2
        state:
          type: string
          description: address state
        city:
          type: string
          description: address city
        district:
          type: string
          description: address district or neighboor
        zipCode:
          type: string
          description: zip code
        street:
          type: string
          description: street address
        number:
          type: string
          description: street number address
        complement:
          type: string
          description: apartament number or address complement
    Sessions_FraudAnalysisMetadata:
      type: object
      properties:
        customer:
          description: customer (payeer) data
          type: object
          properties:
            name:
              type: string
              description: customer name
            email:
              type: string
              description: customer email
            phone:
              type: string
              description: customer phone number
            identityType:
              type: string
              description: document type, see table of types
            identity:
              type: string
              description: document number
            registrationDate:
              type: string
              description: customer registration date
            deliveryAddress:
              description: Endereço de entrega
              allOf:
                - $ref: '#/components/schemas/Sessions_FraudAnalysisAddress'
            billingAddress:
              description: Endereço de cobrança
              allOf:
                - $ref: '#/components/schemas/Sessions_FraudAnalysisAddress'
        cart:
          description: Cart of products details
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: product name
                  quantity:
                    type: integer
                    description: itens of product purchased
                  sku:
                    type: string
                    description: unique product identification on store
                  unitPrice:
                    type: integer
                    description: unit price of product in cents
                  risk:
                    type: string
                    enum:
                      - high
                      - low
                    description: product risk of fraud
                  description:
                    type: string
                    description: product description
                  categoryId:
                    type: string
                    description: category which product belongs to
    Sessions_FraudAnalysisCustomerBrowser:
      type: object
      properties:
        browserFingerprint:
          type: string
          description: fingerprint id generated by browser
        cookiesAccepted:
          type: boolean
          description: indicates if cookies has been accepeted
        email:
          type: string
          description: logged email address
        hostName:
          type: string
          description: user's computer hostname
        ipAddress:
          type: string
          description: user's ip address
        type:
          type: string
          description: browser's user-agent
  examples:
    ClientToken_AuthRequest:
      value:
        scope:
          - tokens
        expires: 31104000
    ClientToken_AuthResponse:
      value:
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        publicKey: <YOUR_PUBLIC_KEY>
        scope:
          - tokens
        expires: 31104000
        createdAt: 20200110 00:00:00
    Cards_ErrorResponse:
      value:
        error:
          type: card_declined
          declinedCode: invalid_number
          message: invalid card number
    Cards_TokenRequest:
      value:
        cardHolderName: JOSE DAS NEVES
        cardNumber: '4019598346009339'
        cardCvv: '123'
        cardExpirationDate: 12/2026
    Cards_TokenResponse:
      value:
        id: 82aba896-9e37-45b6-aa90-d510c9050596
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
    Cards_CardRequest:
      value:
        tokenId: 82aba896-9e37-45b6-aa90-d510c9050596
    Cards_CardResponse:
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        customerId: 82aba896-9e37-45b6-aa90-d510c9050596
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        expirationMonth: '12'
        expirationYear: '2026'
        brand: Visa
        cvvChecked: true
        fingerprint: cbd4a441-c63c-4dee-ac6b-bfa7fa1df818
        first6digits: '401959'
        last4digits: '9339'
        createdAt: 2012-06-30 23:59:59 +0000
        status: active
    Cards_CardList:
      value:
        meta:
          itemCount: 10
          totalItems: 20
          itemsPerPage: 10
          totalPages: 5
          currentPage: 2
        items:
          - id: 148d5db0-f1c3-439f-902d-f1f268086e1d
            customerId: 82aba896-9e37-45b6-aa90-d510c9050596
            clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
            expirationMonth: '12'
            expirationYear: '2026'
            brand: Visa
            cvvChecked: true
            fingerprint: cbd4a441-c63c-4dee-ac6b-bfa7fa1df818
            first6digits: '401959'
            last4digits: '9339'
            createdAt: 2012-06-30 23:59:59 +0000
            status: active
    Cards_MetaPagination:
      value:
        itemCount: 10
        totalItems: 20
        itemsPerPage: 10
        totalPages: 5
        currentPage: 2
    Charges_ErrorResponse:
      value:
        error:
          type: card_declined
          declinedCode: invalid_number
          message: invalid card number
    Charges_ChargeCardRequest:
      value:
        merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: false
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: credit
          installments: 1
        paymentSource:
          sourceType: card
          cardId: 148d5db0-f1c3-439f-902d-f1f268086e1d
    Charges_ChargePixRequest:
      value:
        merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: true
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: pix
          expiresIn: 3600
        paymentSource:
          sourceType: customer
          customer:
            name: Customer test
            email: jose2@gmail.com
            document:
              number: '97055503019'
              type: cpf
            phoneNumber: 21 98889999099
    Charges_ChargeBoletoRequest:
      value:
        merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: true
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: boleto
          expiresDate: '2022-12-31'
          instructions: Instruções para pagamento do boleto
          interest:
            days: 1
            amount: 100
            percentage: 0.2
          fine:
            days: 2
            amount: 200
            percentage: 0
        paymentSource:
          sourceType: customer
          customer:
            name: Customer test
            email: jose2@gmail.com
            document:
              number: '97055503019'
              type: cpf
            phoneNumber: 21 98889999099
    Charges_ChargeResponseSplitRequest:
      summary: Card and Split billing example
      value:
        merchantId: 7f8870a2-71c9-4ef0-a531-82000e00b7e1
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: false
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: credit
          installments: 1
        paymentSource:
          sourceType: card
          card:
            cardNumber: '5261424250184574'
            cardCvv: '321'
            cardExpirationDate: 06/2028
            cardHolderName: JOAO DA SILVA
        splitRules:
          - sellerId: 32c68557-902c-408b-b464-cf487c7cda97
            percentage: 80
            liable: true
            processingFee: true
    Charges_ChargeCardResponse:
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        amount: 150
        currency: BRL
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: false
        status: pre_authorized
        paymentMethod:
          paymentType: credit
          installments: 1
        paymentSource:
          sourceType: card
          card:
            cardNumber: '5261424250184574'
            cardCvv: '321'
            cardExpirationDate: 06/2028
            cardHolderName: JOAO DA SILVA
        transactionRequests:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            idempotencyKey: fafe857b176e45d6b12e32fcaf228996
            providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
            providerType: STRIPE
            transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
            amount: 1500
            authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
            requestStatus: success
            requestType: authorization
            responseTs: 2633ms
            createdAt: '2021-08-12T16:08:39.536Z'
            updatedAt: '2021-08-12T16:08:42.212Z'
            providerAuthorization:
              networkAuthorizationCode: '00'
              networkResponseCode: ''
    Charges_ChargePixResponse:
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: true
        status: pending
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        paymentMethod:
          paymentType: pix
          expiresIn: 3600
          qrCodeData: >-
            00020101021126510014BR.GOV.BCB.PIX0129K89VdiUgWN1B3p0IHrgHkNHg9tX5F52040000530398654040.155802BR5913Customer
            test600062070503***630431C0
          qrCodeImageUrl: https://....
        paymentSource:
          sourceType: customer
          customerId: 1cdcf0c9-eb04-4e43-b9b2-b7a4acdead1f
        transactionRequests:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            idempotencyKey: fafe857b176e45d6b12e32fcaf228996
            providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
            providerType: STRIPE
            transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
            amount: 1500
            authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
            requestStatus: success
            requestType: authorization
            responseTs: 2633ms
            createdAt: '2021-08-12T16:08:39.536Z'
            updatedAt: '2021-08-12T16:08:42.212Z'
            providerAuthorization:
              networkAuthorizationCode: '00'
              networkResponseCode: ''
    Charges_ChargeBoletoResponse:
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        amount: 150
        currency: BRL
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: true
        status: pending
        paymentMethod:
          paymentType: boleto
          expiresDate: '2021-12-31'
          barcodeData: '412343241324321431241341'
          barcodeImageUrl: https://....
        paymentSource:
          sourceType: customer
          customerId: 1cdcf0c9-eb04-4e43-b9b2-b7a4acdead1f
        transactionRequests:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            idempotencyKey: fafe857b176e45d6b12e32fcaf228996
            providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
            providerType: STRIPE
            transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
            amount: 1500
            authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
            requestStatus: success
            requestType: authorization
            responseTs: 2633ms
            createdAt: '2021-08-12T16:08:39.536Z'
            updatedAt: '2021-08-12T16:08:42.212Z'
            providerAuthorization:
              networkAuthorizationCode: '00'
              networkResponseCode: ''
    Charges_ChargeList:
      value:
        meta:
          itemCount: 10
          totalItems: 20
          itemsPerPage: 10
          totalPages: 5
          currentPage: 2
        items:
          - id: 148d5db0-f1c3-439f-902d-f1f268086e1d
            customerId: 82aba896-9e37-45b6-aa90-d510c9050596
            clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
            createdAt: 2012-06-30 23:59:59 +0000
            amount: 150
            currency: BRL
            statementDescriptor: LOJA JOAO
            description: Descrição longa da cobrança
            capture: false
            orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
            paymentMethod:
              paymentType: credit
              installments: 1
            paymentSource:
              sourceType: card
              cardId: 148d5db0-f1c3-439f-902d-f1f268086e1d
            transactionRequests:
              - id: 78601913-a176-4d71-b7e8-abb6fc49a340
                idempotencyKey: fafe857b176e45d6b12e32fcaf228996
                providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
                providerType: STRIPE
                transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
                amount: 1500
                authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
                requestStatus: success
                requestType: authorization
                responseTs: 2633ms
                createdAt: '2021-08-12T16:08:39.536Z'
                updatedAt: '2021-08-12T16:08:42.212Z'
                providerAuthorization:
                  networkAuthorizationCode: '00'
                  networkResponseCode: ''
    Charges_ChargeResponseSplit:
      summary: Exemplo resposta cobrança Cartão e Split
      value:
        id: 148d5db0-f1c3-439f-902d-f1f268086e1d
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        amount: 150
        currency: BRL
        orderId: 32c68ff7-902c-408b-b464-cf487c7cda97
        statementDescriptor: LOJA JOAO
        description: Descrição longa da cobrança
        capture: false
        status: pre_authorized
        paymentMethod:
          paymentType: credit
          installments: 1
        paymentSource:
          sourceType: card
          cardId: 148d5db0-f1c3-439f-902d-f1f268086e1d
        transactionRequests:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            idempotencyKey: fafe857b176e45d6b12e32fcaf228996
            providerId: 2c3b57d8-ee43-4b19-bc8a-949a88c51df1
            providerType: STRIPE
            transactionId: ch_3JYE7MHjGFBGEeiP0lfTD3Ob
            amount: 1500
            authorizationNsu: 1cc8391c-f0d5-4b7a-9fcf-653cea26be13
            requestStatus: success
            requestType: authorization
            responseTs: 2633ms
            createdAt: '2021-08-12T16:08:39.536Z'
            updatedAt: '2021-08-12T16:08:42.212Z'
            providerAuthorization:
              networkAuthorizationCode: '00'
              networkResponseCode: ''
        splitRules:
          - sellerId: 32c68557-902c-408b-b464-cf487c7cda97
            percentage: 80
            liable: true
            processingFee: true
    Customers_CustomerResponse:
      value:
        id: 82aba896-9e37-45b6-aa90-d510c9050596
        clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
        createdAt: 2012-06-30 23:59:59 +0000
        name: Customer test
        email: jose2@gmail.com
        document:
          number: '97055503019'
          type: cpf
          country: BR
        phoneNumber: 21 98889999099
        address:
          country: BR
          state: Rio de Janeiro
          city: Rio de Janeiro
          district: Leblon
          zipCode: '25650011'
          street: Av Geraldo Cardoso
          streetNumber: '205'
          complement: Apto 203
    Customers_CustomerList:
      value:
        meta:
          itemCount: 10
          totalItems: 20
          itemsPerPage: 10
          totalPages: 5
          currentPage: 2
        items:
          - id: 82aba896-9e37-45b6-aa90-d510c9050596
            clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
            createdAt: 2012-06-30 23:59:59 +0000
            name: Customer test
            email: jose2@gmail.com
            phoneNumber: 21 98889999099
            document:
              number: '97055503019'
              type: cpf
              country: BR
            address:
              country: BR
              state: Rio de Janeiro
              city: Rio de Janeiro
              district: Leblon
              zipCode: '25650011'
              street: Av Geraldo Cardoso
              streetNumber: '205'
              complement: Apto 203
    Customers_CustomerRequest:
      value:
        name: Customer test
        email: jose2@gmail.com
        phoneNumber: 21 98889999099
        document:
          number: '97055503019'
          type: cpf
          country: BR
        address:
          country: BR
          state: Rio de Janeiro
          city: Rio de Janeiro
          district: Leblon
          zipCode: '25650011'
          street: Av Geraldo Cardoso
          streetNumber: '205'
          complement: Apto 203
    Customers_LinkCardRequest:
      value:
        cardId: 82aba896-9e37-45b6-aa90-d510c9050596
    Customers_CustomerCardList:
      value:
        meta:
          itemCount: 10
          totalItems: 20
          itemsPerPage: 10
          totalPages: 5
          currentPage: 2
        items:
          - id: 148d5db0-f1c3-439f-902d-f1f268086e1d
            customerId: 82aba896-9e37-45b6-aa90-d510c9050596
            clientId: cc0b1e41-2936-45c5-947f-93995ffcdc00
            expirationMonth: '12'
            expirationYear: '2026'
            brand: Visa
            cvvChecked: true
            fingerprint: cbd4a441-c63c-4dee-ac6b-bfa7fa1df818
            first6digits: '401959'
            last4digits: '9339'
            createdAt: 2012-06-30 23:59:59 +0000
            status: active
    Sessions_SessionResponse:
      value:
        id: c1db83fa-723c-4e1f-9722-bc19d1be6791
        name: Pedido 1
        status: created
        isActive: true
        clientId: 39d2d314-5412-431a-b34b-74f9f0fbe7e1
        orderId: b84b7694-d22f-4083-bee7-c1274b16eb4a
        amount: 100
        currency: BRL
        capture: true
        merchantId: 9930c8d9-a7a8-4039-9faf-3715ad87baf8
        dueDate: '2022-10-26T19:32:08.000Z'
        description: Pedido Black Friday
        statementDescriptor: LOJA JOAO
        items:
          - name: Item 1
            description: Item do carrinho
            unitPrice: 1000
            quantity: 1
            tangible: false
        paymentLink: https://link.malga.io/c1db83fa-723c-4e1f-9722-bc19d1be6791
        paymentMethods:
          - paymentType: pix
            expiresIn: 30
        createdAt: '2022-10-25T22:49:06.588Z'
        updatedAt: '2022-10-25T22:49:06.588Z'
        publicKey: 8be71cdf-01dc-4b1a-823a-4c58be6e4cf1
    Sessions_SessionRequest:
      value:
        amount: 100
        isActive: true
        capture: true
        merchantId: 1b0c6960-702a-4074-95c2-eed2790c16a1
        dueDate: '2022-10-25T09:28:45.000Z'
        description: Promoção Black Friday
        statementDescriptor: LOJA JOAO
        paymentMethods:
          - paymentType: pix
            expiresIn: 30
        items:
          - name: Item 1
            description: Item do carrinho
            unitPrice: 1000
            quantity: 1
            tangible: false
    Sessions_Session:
      value:
        id: 1b0c6960-702a-4074-95c2-eed2790c16a1
        name: Nome da sessão
        status: created
        isActive: true
        clientId: 1b0c6960-702a-4074-95c2-eed2790c16a1
        orderId: null
        amount: 100
        currency: BRL
        capture: true
        merchantId: 69aea152-ba70-49a3-a31c-044ac1651146
        dueDate: '2022-10-25T09:28:45.000Z'
        description: Promoção Black Friday
        statementDescriptor: LOJA JOAO
        paymentMethods:
          - paymentType: credit
            installments: 1
        items:
          - id: 78601913-a176-4d71-b7e8-abb6fc49a340
            name: Item 1
            description: Descrição do item
            unitPrice: 10000
            quantity: 1
            tangible: false
        createdAt: '2022-10-25T09:28:45.000Z'
        updatedAt: '2022-10-25T09:28:45.000Z'
        publicKey: 1b0c6960-702a-4074-95c2-eed2790c16a1
    Sessions_ErrorResponse:
      value:
        error:
          type: card_declined
          declinedCode: invalid_number
          message: invalid card number
        UpdateSessionResponse: null
    Sessions_CancelSessionResponse:
      value:
        id: c1db83fa-723c-4e1f-9722-bc19d1be6791
        status: canceled
x-tagGroups:
  - name: API Key
    tags:
      - Client-token
  - name: Cards
    tags:
      - Tokens
      - Cards
  - name: Payments
    tags:
      - Customers
      - Charges
      - Sessions
  - name: Notification and events
    tags:
      - Webhooks
  - name: Providers
    tags:
      - Merchants
  - name: Export Data
    tags:
      - Reports
  - name: Appendix
    tags:
      - Table of types